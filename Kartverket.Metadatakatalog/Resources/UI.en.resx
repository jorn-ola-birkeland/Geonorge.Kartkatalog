<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AppPageTitle" xml:space="preserve">
    <value>Map Catalog</value>
  </data>
  <data name="Facet_area" xml:space="preserve">
    <value>Area</value>
  </data>
  <data name="Facet_DistributionProtocols" xml:space="preserve">
    <value>Distribution form</value>
  </data>
  <data name="Facet_keyword" xml:space="preserve">
    <value>Keyword</value>
  </data>
  <data name="Facet_license" xml:space="preserve">
    <value>License</value>
  </data>
  <data name="Facet_nationalinitiative" xml:space="preserve">
    <value>Cooperation and laws</value>
  </data>
  <data name="Facet_organization" xml:space="preserve">
    <value>Organization</value>
  </data>
  <data name="Facet_organizationgroup" xml:space="preserve">
    <value>Organization</value>
  </data>
  <data name="Facet_place" xml:space="preserve">
    <value>Geographical area</value>
  </data>
  <data name="Facet_placegroups" xml:space="preserve">
    <value>Geographical area</value>
  </data>
  <data name="Facet_theme" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="Facet_type" xml:space="preserve">
    <value>Type</value>
  </data>
  <data name="Facet_type_dataset" xml:space="preserve">
    <value>Dataset</value>
  </data>
  <data name="Facet_type_series" xml:space="preserve">
    <value>Dataset series</value>
  </data>
  <data name="Facet_type_service" xml:space="preserve">
    <value>Service</value>
  </data>
  <data name="Facet_type_servicelayer" xml:space="preserve">
    <value>Servicelayer</value>
  </data>
  <data name="Facet_type_software" xml:space="preserve">
    <value>Application</value>
  </data>
  <data name="Facet_type_dimensionGroup" xml:space="preserve">
    <value>Data package</value>
  </data>
  <data name="Facet_dataaccess" xml:space="preserve">
    <value>Access to data</value>
  </data>
  <data name="Service_need_permission" xml:space="preserve">
    <value>The service requires special access to display - contact data owner</value>
  </data>
  <data name="Description" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="AboutMapCatalog" xml:space="preserve">
    <value>Here is an overview of data sets in Geonorge with information about available formats, associated services and APIs. Own overview of services / APIs and map solutions can be found on your own pages in the right column.</value>
  </data>
  <data name="DataOwner" xml:space="preserve">
    <value>Data owner</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="Hits" xml:space="preserve">
    <value>hits</value>
  </data>
  <data name="HitsDisplay" xml:space="preserve">
    <value>Showing</value>
  </data>
  <data name="HitsOf" xml:space="preserve">
    <value>of</value>
  </data>
  <data name="Map" xml:space="preserve">
    <value>Map</value>
  </data>
  <data name="OpenData" xml:space="preserve">
    <value>Open data</value>
  </data>
  <data name="Title" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="ApisAndServices" xml:space="preserve">
    <value>APIs and services</value>
  </data>
  <data name="DepartmentalOverview" xml:space="preserve">
    <value>Departmental overview</value>
  </data>
  <data name="FilterSearch" xml:space="preserve">
    <value>Filter search on</value>
  </data>
  <data name="MapCatalogMainPage" xml:space="preserve">
    <value>Map Catalog - main page</value>
  </data>
  <data name="MapServices" xml:space="preserve">
    <value>Map services</value>
  </data>
  <data name="MetadataInMunicipality" xml:space="preserve">
    <value>What is in municipality/county?</value>
  </data>
  <data name="Pages" xml:space="preserve">
    <value>Pages</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="SaveAs" xml:space="preserve">
    <value>Save As</value>
  </data>
  <data name="APIsAndServicesText" xml:space="preserve">
    <value>APIs and services are machine-readable interface over map data and documentation. These are used in many internet solutions to update the information continuously.</value>
  </data>
  <data name="DepartmentalOverviewHeader" xml:space="preserve">
    <value>Departmental overview of data</value>
  </data>
  <data name="MapServicesText" xml:space="preserve">
    <value>Many departments, county counties and municipalities offer a map for use to the public. Here you can explore, for example, aerial photographs, elevation data, area plans or different theme maps.</value>
  </data>
  <data name="MunicipalitySelect" xml:space="preserve">
    <value>Select municipality/county</value>
  </data>
  <data name="MunicipalitySelectInfo" xml:space="preserve">
    <value>Select a municipality or county, and get an overview of which site-specific data exists</value>
  </data>
  <data name="OpenDataText" xml:space="preserve">
    <value>Most map data in Norway are open data. These can be downloaded free of charge from Geonorge, which offers great opportunities for innovation and use. The data set license describes what you are allowed to do with the data.</value>
  </data>
  <data name="SelectOrganization" xml:space="preserve">
    <value>Select organization</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AddToBasket" xml:space="preserve">
    <value>Add to basket</value>
  </data>
  <data name="CanNotBeAddedToBasket" xml:space="preserve">
    <value>Can not be added to basket</value>
  </data>
  <data name="Display" xml:space="preserve">
    <value>Display</value>
  </data>
  <data name="DisplayAllDatasetsFrom" xml:space="preserve">
    <value>Display all datasets from</value>
  </data>
  <data name="DisplayMetadataFor" xml:space="preserve">
    <value>Display metadata for</value>
  </data>
  <data name="InMap" xml:space="preserve">
    <value>in map</value>
  </data>
  <data name="IsAddedTo" xml:space="preserve">
    <value>is added to</value>
  </data>
  <data name="IsRemovedFrom" xml:space="preserve">
    <value>Is removed from</value>
  </data>
  <data name="OfflineData" xml:space="preserve">
    <value>Restricted data</value>
  </data>
  <data name="RestrictedData" xml:space="preserve">
    <value>Protected data</value>
  </data>
  <data name="ServiceCannotBeDisplayedMap" xml:space="preserve">
    <value>The service can not be displayed on the map</value>
  </data>
  <data name="ServiceNotavailable" xml:space="preserve">
    <value>Service is not available</value>
  </data>
  <data name="ServiceSlow" xml:space="preserve">
    <value>The service may be slow to show</value>
  </data>
  <data name="ServiceSlowAndSpecialAccess" xml:space="preserve">
    <value>The service may be slow to display and requires special access to display - contact data owner</value>
  </data>
  <data name="TheBasket" xml:space="preserve">
    <value>the basket</value>
  </data>
  <data name="ToBasket" xml:space="preserve">
    <value>to basket</value>
  </data>
  <data name="AvailableAs" xml:space="preserve">
    <value>Available as</value>
  </data>
  <data name="CopyToClipboard" xml:space="preserve">
    <value>Click to copy the url to clipboard</value>
  </data>
  <data name="UrlToService" xml:space="preserve">
    <value>Url to service</value>
  </data>
  <data name="VisitWebsite" xml:space="preserve">
    <value>Visit website for</value>
  </data>
  <data name="WebPage" xml:space="preserve">
    <value>Webpage</value>
  </data>
  <data name="WebPageHeader" xml:space="preserve">
    <value>web page</value>
  </data>
  <data name="ContactDataOwner" xml:space="preserve">
    <value>Contact dataowner</value>
  </data>
  <data name="DisplayCartography" xml:space="preserve">
    <value>Display cartography</value>
  </data>
  <data name="DisplayCoverageMap" xml:space="preserve">
    <value>Display coverage map</value>
  </data>
  <data name="DisplayProductPage" xml:space="preserve">
    <value>Display productpage</value>
  </data>
  <data name="DisplayProductSheet" xml:space="preserve">
    <value>Display product sheet</value>
  </data>
  <data name="DisplayProductSpesification" xml:space="preserve">
    <value>Display product spesification</value>
  </data>
  <data name="Distributions" xml:space="preserve">
    <value>Distributions</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="NotSet" xml:space="preserve">
    <value>not set</value>
  </data>
</root>