@using Kartverket.Metadatakatalog.Models.ViewModels
@using Kartverket.Metadatakatalog.Helpers
@model SearchViewModel

@{
    if (!string.IsNullOrWhiteSpace(Model.Text))
    {
        ViewBag.Title = "Søk etter " + Model.Text;
    }
    else
    {
        ViewBag.Title = "Søk";
    }
}

@section breadcrumb {
    <li>Kartløsninger i Norge</li>
}

<div id="feedback-alert" class="alert alert-success alert-dismissible" role="alert">
    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <span class="message"></span>
</div>
<section class="heading">
    <div class="row">
        <div class="col-sm-12">
            <h1 class="small-h1">
                Kartløsninger i Norge
            </h1>
        </div>
        <div class="col-sm-12">
            <span class="separator-lg"></span>
        </div>
    </div>
</section>

@Html.Partial("_UnderlayingDistributions")

@*Template for a table row*@
<script type="text/x-template" id="resultItemRow">
        <div v-bind:class="$root.columns">
            <div v-bind:style="{ backgroundColor: bgcolor }" style="padding: 10px 0px;">

                @* **** LISTE **** *@
                <div v-if="$root.viewType == 'list'">

                    <div class="col-sm-1">
                        <a v-bind:href="organizationUrl" class="show-loading-animation" data-loading-message="Henter innhold">
                            <img v-bind:src="resultItem.OrganizationLogoUrl" class="img-responsive center-block" v-bind:alt="resultItem.Organization" v-bind:title="'Vis alle tjenester og datasett fra ' + resultItem.Organization" />
                        </a>
                    </div>

                    <div class="col-sm-6">
                        <a v-bind:href="readMoreUrl" class="show-loading-animation">
                            <p style="font-size:14pt" class="role-button search-results-name" role="button">{{resultItem.Title}}</p>
                        </a>
                        <p>{{description}}</p>
                        <p>
                            Tilgjengelig som:
                            <span v-bind:title="'Tilgjengelig som ' + resultItem.DistributionType" style="width:auto" class="label label-tjeneste">{{resultItem.DistributionType}}</span>
                        </p>
                    </div>

                    <div class="col-sm-2">

                        <a style="width: 130px" v-bind:id="mapLink.mapLinkButtonId" v-bind:href="mapLink.href" v-bind:onclick="mapLink.onClick" data-toggle='tooltip' data-placement='bottom' v-bind:title="resultItem.MapTitleTag" target="_blank" v-bind:class="mapLink.mapLinkClassButton">
                            <span v-bind:id="mapLink.mapMacroButtonId" class="custom-icon custom-icon-kartmarkoer"></span><span class="button-text">Kart</span>
                        </a>

                        <a style="width: 130px"
                           v-on:click="addToCart()" v-if="resultItem.ShowDownloadService"
                           v-bind:id="'addToCart-' + resultItem.Uuid"
                           v-bind:href='resultItem.AddToCartUrl'
                           data-toggle='tooltip'
                           data-placement='bottom'
                           onclick="ga('send', 'event', 'Nedlasting', 'leggikurv');"
                           v-bind:title='"Legg til " + resultItem.Title + " i kurv"'
                           class="btn btn-default add-to-cart-btn"
                           v-bind:class="[resultItem.IsRestricted || resultItem.IsOffline ? 'prevent-action' : '']">
                            <span class="custom-icon custom-icon-handlekurv"></span><span class="button-text"> Legg i kurv</span>
                        </a>

                        <a style="width: 130px"
                           v-else-if="resultItem.ShowDownloadLink"
                           v-bind:href="resultItem.DownloadUrl"
                           onclick="ga('send', 'event', 'Nedlasting', 'lastned');"
                           data-toggle='tooltip'
                           data-placement='bottom'
                           v:bind:title='"Last ned datasett for " + resultItem.Title'
                           target="_blank"
                           class="btn btn-default">
                            <span class="custom-icon custom-icon-lastned"></span><span class="button-text"> Last ned</span>
                        </a>

                        <a style="width: 130px"
                           v-else
                           v-bind:title='"Last ned datasett for " + resultItem.Title'
                           class="disabled btn btn-default">
                            <span class="custom-icon custom-icon-lastned"></span><span class="button-text"> Last ned</span>
                        </a>
                    </div>

                    <div class="col-sm-3">
                        <a v-if="thumbnailSrc" v-bind:href="readMoreUrl">
                            <img v-bind:src="thumbnailSrc" />
                        </a>
                    </div>

                    <div class="clearfix"></div>
                    @* Underliggende distribusjoner *@

                    <div data-toggle='tooltip' data-placement='bottom' v-on:click="getUnderlyingDistributions()" class="col-md-12" title="Vis underliggende distribusjoner">
                        <div style="padding: 10px 10px 1px; background-color:#f4f4f4">
                            <p><b>Underliggende distribusjoner   </b><span class="expand-arrow" v-bind:class="[expanded ? 'active' : '']"></span></p>
                            <div v-show="expanded" is="distributionRows" v-bind:underlaying-distributions="underlayingDistributions">

                            </div>
                        </div>
                    </div>
                </div>

                @* *** TABELL *** *@
                <div v-if="$root.viewType == 'table'">
                    @*Pil underliggende distribusjoner i tabellvisning*@
                    <div data-toggle='tooltip' data-placement='bottom' v-on:click="getUnderlyingDistributions()" class="col-sm-1" title="Vis underliggende distribusjoner">
                        <span class="expand-arrow" v-bind:class="[expanded ? 'active' : '']"></span>
                    </div>

                    <div class="col-sm-4">
                        @*Tittel*@
                        <a v-bind:href="readMoreUrl" class="show-loading-animation">
                            <span class="role-button search-results-name" role="button">{{resultItem.Title}}</span>
                        </a>
                    </div>

                    @*Distribusjonstype tabell *@
                    <div class="col-sm-2">
                        <span v-bind:title="resultItem.DistributionType" data-toggle='tooltip' data-placement='bottom' class="label label-tjeneste" style="width:auto">{{resultItem.DistributionType}}</span>
                    </div>

                    @*Organisasjon tabell*@
                    <div class="col-sm-3">
                        <a v-bind:href="organizationUrl" class="show-loading-animation" data-toggle='tooltip' data-placement='bottom' v-bind:data-loading-message="'Henter innhold fra ' + resultItem.Organization" v-bind:title="'Vis alle tjenester og datasett fra ' + resultItem.Organization">
                            {{resultItem.Organization}}
                        </a>
                    </div>

                    @*Åpne data*@
                    <div class="col-sm-1">
                        <span data-toggle='tooltip' data-placement='bottom' v-bind:title="openData.title" v-bind:class="openData.className"></span>
                    </div>


                    @*Kart*@
                    <div class="col-xs-1">
                        <a v-bind:id="mapLink.mapLinkId" v-bind:href="mapLink.href" v-bind:onclick="mapLink.onClick" data-toggle='tooltip' data-placement='bottom' v-bind:title="mapLink.mapTitleTag" target="_blank" v-bind:class="mapLink.mapLinkClassLink">
                            <span v-bind:id="mapLink.mapMacroId" v-bind:class="mapLink.iconPermission"></span>
                        </a>
                    </div>

                </div>

                @* *** GALLERI *** *@
                <div v-if="$root.viewType == 'gallery'" class="block shortcutpageteaserblock" style="padding:0px;">
                    <div class="teaser-with-background-image">
                        <a v-bind:href="readMoreUrl">
                            <div class="teaser-background-image" v-bind:style="{ backgroundImage: 'url(' + thumbnailSrc + ')'}">
                                <div class="teaser-overlay">
                                    <div class="teaser-caption">
                                        <div class="teaser-heading">{{resultItem.Title}}</div>
                                    </div>
                                </div>
                            </div>
                        </a>
                    </div>
                </div>

                <div class="clearfix"></div>
            </div>

            <div v-if="$root.viewType == 'table'" v-show="expanded" is="distributionRows" v-bind:underlaying-distributions="underlayingDistributions">

            </div>
        </div>
</script>

@helper DisplayPaginationBottom()
{
    <div class="search-result-navigation">
        Viser @Model.ShowingFromAndTo() av @Model.NumFound treff:
        <div class="pagination-container">
            <ul class="pagination pagination-sm btn-group inline-block">
                @if (Model.IsFirstButtonActive())
                {
                    <li><a aria-label="Første" title="Første" href="@Url.Action("Index", Model.ParamsForFirstLink())">&laquo;</a></li>
                }

                @if (Model.IsPreviousButtonActive())
                {
                    <li><a href="@Url.Action("Index", Model.ParamsForPreviousLink())">&laquo; Forrige</a></li>
                }

                @for (int i = Model.startPage; i <= Model.endPage; i++)
                {
                    if (Model.IsActivePage(i))
                    {
                        <li class="active"><a href="@Url.Action("Index", Model.ParamsForPageNumber(i))">@i</a></li>
                    }
                    else
                    {
                        <li><a href="@Url.Action("Index", Model.ParamsForPageNumber(i))">@i</a></li>
                    }
                }

                @if (Model.IsNextButtonActive())
                {
                    <li><a href="@Url.Action("Index", Model.ParamsForNextLink())">Neste &raquo;</a></li>
                }
                @if (Model.IsLastButtonActive())
                {
                    <li><a aria-label="Siste" title="Siste" href="@Url.Action("Index", Model.ParamsForLastLink())"> &raquo;</a></li>
                }
            </ul>
        </div>
    </div>
}


@{

    string url = HttpContext.Current.Request.Url.AbsoluteUri; url = url.ToLower().Replace("kartlosninger-i-norge", "api/kartlosninger-i-norge");
    Uri uri = new Uri(url);
    string path = String.Format("{0}{1}{2}{3}", uri.Scheme,
    Uri.SchemeDelimiter, uri.Authority, uri.AbsolutePath);
    string querystring = Request.QueryString.ToString();
    querystring = querystring.Replace(".name", "name"); querystring = querystring.Replace(".value", "value");
    var qs = HttpUtility.ParseQueryString(querystring);
    System.Collections.Specialized.NameValueCollection qsCol = new System.Collections.Specialized.NameValueCollection(qs);
    qs.Clear();
    foreach (string key in qsCol)
    {
        qs.Add(key.ToLower(), qsCol[key]);
    }
    qs.Set("Offset", "1"); qs.Set("limit", Model.NumFound.ToString()); qs.Add("mediatype", "csv");
    string query = qs.ToString(); string urlCSV = path + "?" + query;
}

<div class="row search-result-navigation">
    <div class="col-md-4">
        Viser @Model.ShowingFromAndTo() av @Model.NumFound treff:
        <div class="pagination-container">
            <ul class="pagination pagination-sm btn-group inline-block">
                @if (Model.IsFirstButtonActive())
                {
                    <li><a aria-label="Første" title="Første" href="@Url.Action("Index", Model.ParamsForFirstLink())"><span class="fa fa-angle-double-left"></span></a></li>
                }

                @if (Model.IsPreviousButtonActive())
                {
                    <li><a href="@Url.Action("Index", Model.ParamsForPreviousLink())"><span class="fa fa-angle-left"></span> </a></li>
                }

                @for (int i = Model.startPage; i <= Model.endPage; i++)
                {
                    if (Model.IsActivePage(i))
                    {
                        <li class="active"><a href="@Url.Action("Index", Model.ParamsForPageNumber(i))">@i</a></li>
                    }
                    else
                    {
                        <li><a href="@Url.Action("Index", Model.ParamsForPageNumber(i))">@i</a></li>
                    }
                }

                @if (Model.IsNextButtonActive())
                {
                    <li><a href="@Url.Action("Index", Model.ParamsForNextLink())">  <span class="fa fa-angle-right"></span></a></li>
                }
                @if (Model.IsLastButtonActive())
                {
                    <li><a aria-label="Siste" title="Siste" href="@Url.Action("Index", Model.ParamsForLastLink())"> <span class="fa fa-angle-double-right"></span></a></li>
                }
            </ul>
        </div>
    </div>
    <div class="col-md-4 pull-right">
        <div class="save-as-menu pull-right">
            <label>Lagre som:</label>
            <div class="no-padding-bottom save-as-dropdown">
                <div class="custom-select">
                    <select onchange="additionalView(this.value)" class="form-control">
                        <option value="csvUrl" selected="selected">CSV</option>
                    </select>
                </div>
            </div>
            <div id="saveButtons" class="no-padding-bottom save-as-buttons">
                <a class="btn" id="csvUrl" href="@urlCSV">Lagre</a>
            </div>
        </div>
    </div>
    <div class="clearfix"></div>


</div>

<span class="separator-small separator-gray margin-bottom-10"></span>

<div class="row">
    <div id="searchResultTable" class="col-md-9">

        <span v-on:click="view('gallery')" class="pull-right fa fa-th-large"></span>
        <span v-on:click="view('list')" class="pull-right fa fa-list"></span>
        <span v-on:click="view('table')" class="pull-right fa fa-table"></span>
        <div class="clearfix"></div>
        @if (Model.Result != null)
            {
            <div>
                <div v-if="$root.viewType == 'table'" class="row">
                    <div v-bind:class="orderByTitle.className" class="col-sm-5" v-bind:id="orderByTitle.id"><p><a v-bind:href="orderByTitle.url" class="table-ordering show-loading-animation" data-loading-message="Sorterer innhold">Tittel<span class="orderby-indicator"></span></a></p></div>
                    <div class="col-sm-2"><p>Type</p></div>
                    <div v-bind:class="orderByOwner.className" class="col-sm-3" v-bind:id="orderByOwner.id"><p><a v-bind:href="orderByOwner.url" class="table-ordering show-loading-animation" data-loading-message="Sorterer innhold">Dataeier<span class="orderby-indicator"></span></a></p></div>
                    <div class="col-sm-1 no-padding text-center"><p>Åpne data</p></div>
                    <div class="col-sm-1 no-padding text-center"><p>Kart</p></div>
                </div>

                <div class="menu-separator search-results-table-heading"></div>
                <div v-for="item in viewModel.Result.Items" v-bind:class="tableBorder">
                    <div is="resultItem" v-bind:result-item="item"></div>
                </div>

                <div class="clearfix"></div>
            </div>

            @DisplayPaginationBottom()

        }
    </div>
    <div class="col-sm-12 col-md-3 pull-left hidden-sm hidden-xs">
        <aside class="facet-filter-container">
            <h3 class="">Filtrer søket på:</h3>
            <span class="separator-small"></span>
            @Html.Partial("_FacetFilter", Model)
            <h3 class="" style="padding-top: 40px;">Sider</h3>
            <span class="separator-small"></span>
            @Html.Partial("_FilterPages")
        </aside>
    </div>
</div>

<script>
    @foreach (var item in Model.Result.Items)
    {
        if (item.ShowMapLink() || item.ShowServiceMapLink())
        {
            @:getServiceStatus("@item.ServiceUuid", "@item.Uuid");
                                                                }
    }
</script>

@section scripts {
    @{ var javaScriptSerializer = new System.Web.Script.Serialization.JavaScriptSerializer(); }

    <script>
        //Component
        var ResultItemComponent = {
            template: "#resultItemRow",
            props: ["resultItem"],
            data: function() {
                var data = {
                    expanded: false,
                    underlayingDistributions: {},
                    underlayingDistributionsRequested: false,
                    bgcolor: "#dfdcda",
                };
                return data;
            },
            components: {
                distributionRows: distributionRows
            },
            computed: {
                openData: function() {
                    var openData = {
                        className: "",
                        title: ""
                    };
                    if (this.resultItem.IsRestricted) {
                        openData.className = "custom-icon custom-icon-hengelaas-closed-yellow";
                        openData.title = "Tilgangsbegrensede data";
                    } else if (this.resultItem.IsOffline) {
                        openData.className = "custom-icon custom-icon-hengelaas-closed-red";
                        openData.title = "Skjermede data";
                    } else if (this.resultItem.IsOpendata) {
                        openData.className = "custom-icon custom-icon-hengelaas-open-green";
                        openData.title = "Åpne data";
                    }
                    return openData;
                },
                mapLink: function() {
                    var mapLink = {
                        href: "@Html.NorgeskartUrl() ",
                        mapLinkButtonId: "mapmacrolink-button-" + this.resultItem.Uuid,
                        mapMacroButtonId: "mapmacro-button-" + this.resultItem.Uuid,
                        mapLinkId: "mapmacrolink-" + this.resultItem.Uuid,
                        mapMacroId: "mapmacro-" + this.resultItem.Uuid,
                        onClick: "ga('send', 'event', 'Nedlasting', 'viskart')",
                        mapLinkClassButton: "btn btn-default",
                        mapLinkClassLink: "",
                        iconPermission: "custom-icon",
                        mapTitleTag: this.resultItem.MapTitleTag
                    };

                    if (this.showMapLink()) {
                        mapLink.href += this.resultItem.DownloadUrl;

                    } else if (this.showServiceMapLink()) {
                        mapLink.href += this.resultItem.ServiceUrl;
                        mapLink.iconPermission += restrictedServiceClass();
                    } else {
                        mapLink.href = "";
                        mapLink.mapLinkClassLink = "disabled";
                        mapLink.mapLinkClassButton += " disabled";
                        mapLink.iconPermission += " custom-icon-kartmarkoer";
                        mapLink.mapLinkButtonId = "";
                        mapLink.mapMacroButtonId = "";
                        mapLink.mapLinkId = "";
                        mapLink.mapMacroId = "";
                        mapLink.onClick = "";
                        mapLink.mapTitleTag = "Vis " + this.resultItem.Title + " i kart";
                    }
                    return mapLink;
                },
                itemAddToCart: function() {
                    var itemAddToCart = {
                        buttonClass: "btn btn-default add-to-cart-btn",
                    };

                    if (this.resultItem.IsRestricted || this.resultItem.IsOffline) {
                        itemAddToCart.buttonClass += " add-to-cart-btn prevent-action"
                    }
                    return itemAddToCart;

                },
                organizationUrl: function() {
                    url = "/metadata/" + this.resultItem.OrganizationSeoName;
                    return url;
                },
                readMoreUrl: function() {
                    var organization = this.resultItem.OrganizationSeoName;
                    var title = this.resultItem.TitleSeo;
                    var uuid = this.resultItem.Uuid;
                    var url = "/metadata/" + organization + "/" + title + "/" + uuid;
                    return url;
                },
                description: function() {
                    var description;
                    if (this.resultItem.Abstract.length > 250) {
                        description = this.resultItem.Abstract.substring(0, 251) + " ...";
                    } else {
                        description = this.resultItem.Abstract;
                    }
                    return description;
                },
                thumbnailSrc: function() {
                    var src = "/thumbnail?uuid=" + this.resultItem.Uuid + "&type=small";
                    return src;
                }
            },
            methods: {
                downloadUrl: function(url) {
                    url += this.resultItem.DownloadUrl;
                    return url;
                },
                showMapLink: function() {
                    if (this.resultItem.DistributionProtocol &&
                        (this.resultItem.DistributionProtocol.indexOf("OGC:WMS") > -1 ||
                            this.resultItem.DistributionProtocol.indexOf("OGC:WFS") > -1 ||
                            this.resultItem.DistributionProtocol.indexOf("OGC:WCS") > -1) &&
                        (this.resultItem.Type == "service" || this.resultItem.Type == "servicelayer") &&
                        this.resultItem.DownloadUrl)
                        return true;
                    else return false;
                },
                showServiceMapLink: function() {
                    if (this.resultItemServiceUrl) return true;
                    else return false;
                },
                isRestrictedService: function() {
                    if (this.resultItem.ServiceDistributionAccessConstraint == "Beskyttet" ||
                        this.resultItem.ServiceDistributionAccessConstraint == "restricted" ||
                        this.resultItem.ServiceDistributionAccessConstraint == "norway digital restricted") return true;
                    else {
                        return false;
                    }
                },
                restrictedServiceClass: function() {
                    var iconPermissionClass;
                    if (this.isRestrictedService) {
                        iconPermissionClass = "custom-icon-kartmarkoer-needs-permission";
                    } else {
                        iconPermissionClass = "custom-icon-kartmarkoer";
                    }
                    return iconPermissionClass;
                },
                getUnderlyingDistributions: function() {
                    this.expanded = !this.expanded;
                    if (!this.underlayingDistributionsRequested) {
                        showLoadingAnimation("Henter underliggende distribusjoner");
                        axios.get('/api/distributions/' + this.resultItem.Uuid).then(function(response) {
                            this.underlayingDistributions = response.data;
                            hideLoadingAnimation();
                        }.bind(this));
                    }
                    this.underlayingDistributionsRequested = true;
                },
                addToCart: function() {
                    var item = {
                        name: this.resultItem.Title,
                        uuid: this.resultItem.Uuid,
                        url: "/metadata/uuid/" + this.resultItem.Uuid,
                        organizationLogoUrl: resultItem.OrganizationLogoUrl,
                        distributionUrl: resultItem.DownloadUrl,
                        theme: resultItem.Theme,
                        organizationName: resultItem.Organization
                    }

                    if (localStorage.getItem('orderItems') != null) {
                        orderItems = (JSON.parse(localStorage.getItem('orderItems')));
                    }
                    $.map(orderItems,
                        function(elementOfArray, indexInArray) {
                            if (elementOfArray == item.itemuuid) {
                                added = true;
                            }
                        });
                    if (!added) {
                        orderItems.push(item.uuid);
                        localStorage["orderItems"] = JSON.stringify(orderItems);
                        localStorage[item.uuid + ".metadata"] = JSON.stringify(item);
                        showAlert(item.name + ' er lagt til i <a href="/Download">kurven</a>', 'success');

                        var orderItemCount = $('#orderitem-count').text();
                        if (orderItemCount == null || orderItemCount == '') {
                            orderItemCount = 0;
                            $('#orderitem-count-text').text(' datasett');
                        } else {
                            orderItemCount = parseInt($('#orderitem-count').text());
                        }
                        orderItemCount += 1;
                        $('#orderitem-count').text(orderItemCount);
                        updateShoppingCart();

                    } else {
                        var index = orderItems.indexOf(item.uuid);
                        if (index > -1) {
                            orderItems.splice(index, 1);
                        }
                        localStorage.removeItem(item.uuid + ".metadata");
                        localStorage["orderItems"] = JSON.stringify(orderItems);

                        updateShoppingCart();

                        showAlert(item.name + ' er fjernet fra <a href="/Download">kurven</a>', 'warning');
                    }
                    updateCartButton(addToCartButton, orderItems);
                },
            }
        };

        //Main vue model
        var vueModel = new Vue({
            el: '#searchResultTable',
            data: {
                viewModel: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model))),
                ResultItems: [],
                currentOrderByParameter: getParameterByName("orderby"),
                viewType: "table",
                columns: "",
                orderByUrl: "@Html.Raw(HttpUtility.HtmlDecode(HttpContext.Current.Request.Url.AbsoluteUri)).ToString()",
                orderByTitle: {
                    orderByParam: "title",
                    className: "orderby orderby-title orderby-asc",
                    id: "orderby-title-asc",
                    url: "",
                },
                orderByOwner: {
                    orderByParam: "organization",
                    className: "orderby orderby-organization orderby-asc",
                    id: "orderby-organization-asc",
                    url: "",
                },
                tableBorder: "table-border-bottom"
            },
            components: {
                ResultItem: ResultItemComponent
            },
            created: function() {
                if (this.currentOrderByParameter == "title") {
                    this.orderByTitle.orderByParam = "title_desc";
                    this.orderByTitle.id = "orderby-title-asc";
                    this.orderByTitle.className = "orderby orderby-title orderby-asc";
                    this.orderByOwner.orderByParam = "organization";
                    this.orderByOwner.id = "orderby-organization-asc";
                    this.orderByOwner.className = "orderby orderby-organization orderby-asc";
                } else if (this.currentOrderByParameter == "organization") {
                    this.orderByTitle.orderByParam = "title";
                    this.orderByTitle.id = "orderby-title-asc";
                    this.orderByTitle.className = "orderby orderby-title orderby-asc";
                    this.orderByOwner.orderByParam = "organization_desc";
                    this.orderByOwner.id = "orderby-organization-desc";
                    this.orderByOwner.className = "orderby orderby-organization orderby-asc";
                } else if (this.currentOrderByParameter == "") {
                    this.orderByTitle.orderByParam = "title";
                    this.orderByOwner.orderByParam = "organization";
                    this.orderByTitle.id = "orderby-title-asc";
                    this.orderByTitle.className = "orderby orderby-title orderby-asc";
                    this.orderByOwner.id = "orderby-organization-asc";
                    this.orderByOwner.className = "orderby orderby-organization orderby-asc";
                } else if (this.currentOrderByParameter == "organization_desc") {
                    this.orderByTitle.orderByParam = "title";
                    this.orderByOwner.orderByParam = "organization";
                    this.orderByTitle.id = "orderby-title-asc";
                    this.orderByTitle.className = "orderby orderby-title orderby-asc";
                    this.orderByOwner.id = "orderby-organization-desc";
                    this.orderByOwner.className = "orderby orderby-organization orderby-desc";
                } else if (this.currentOrderByParameter == "title_desc") {
                    this.orderByTitle.orderByParam = "title";
                    this.orderByOwner.orderByParam = "organization";
                    this.orderByTitle.id = "orderby-title-desc";
                    this.orderByTitle.className = "orderby orderby-title orderby-desc";
                    this.orderByOwner.id = "orderby-organization-asc";
                    this.orderByOwner.className = "orderby orderby-organization orderby-asc";
                }

                this.viewType = this.getSelectedViewType();

                this.orderByTitle.url = this.getOrderByUrl(this.orderByTitle.orderByParam);
                this.orderByOwner.url = this.getOrderByUrl(this.orderByOwner.orderByParam);
            },
            methods: {
                orderByExists: function() {
                    return this.orderByUrl.includes("orderby");
                },
                isNotFirstParameterInUrl: function() {
                    return this.orderByUrl.includes("?");
                },
                getOrderByUrl: function(param) {
                    if (this.orderByExists()) {
                        return this.orderByUrl.replace("orderby=" + this.currentOrderByParameter, "orderby=" + param);
                    } else {
                        if (this.isNotFirstParameterInUrl()) {
                            return this.orderByUrl + "&orderby=" + param;
                        } else {
                            return this.orderByUrl + "?orderby=" + param;
                        }
                    }
                },
                view: function(type) {
                    this.viewType = type;
                    localStorage.setItem("layout", this.viewType);
                    if (type == "gallery") {
                        this.columns = 'col-sm-4';
                        this.tableBorder = "";
                    } else {
                        this.columns = "";
                    }
                },
                getSelectedViewType: function() {
                    var viewType = "table";
                    if (localStorage.getItem("layout")) {
                        viewType = localStorage.getItem("layout");
                        this.view(viewType);
                    }
                    return viewType;
                }
            }
        });
    </script>

    <script>
        function showAlert(message, colorClass) {
            $('#feedback-alert').attr('class', 'alert alert-dismissible alert-' + colorClass);
            $('#feedback-alert .message').html(message);
            $('#feedback-alert').show();
        }

        $(document).ready(function() {
            $("#orderby").change(
                function() {
                    location.href = $(this).val();
                }
            );
        });


        $(document).ready(function() {
            @if (Html.DownloadServiceEnabled())
            {
                <text>
                    if (localStorage.getItem("orderItems") != null) {
                        var storedOrderItems = JSON.parse(localStorage["orderItems"]);
                        var orderitemCount = storedOrderItems.length;
                        if (orderitemCount > 0) {
                            $('#orderitem-count').text(orderitemCount);
                            $('#orderitem-count-text').text(' datasett');
                            updateAllCartButtons(storedOrderItems);
                        } else {
                            $('#orderitem-count').text('');
                            $('#orderitem-count-text').text('Kurven er tom');
                        }
                    } else {
                        $('#orderitem-count').text('');
                        $('#orderitem-count-text').text('Kurven er tom');
                    }
                </text>
            }
        });


        $(window).load(function() {
            @if (Html.DownloadServiceEnabled())
            {
                <text>
                    if (typeof Storage !== "undefined") {

                        console.log('window.localStorage is available!');
                        var orderItems = [];
                        $('.add-to-cart-btn:not(.prevent-action)').click(function() {
                            addToCartButtonClick($(this));
                        });
                    } else {
                        console.log('no native support for HTML5 storage :(');
                    }

                </text>
            }

        });
    </script>
}
