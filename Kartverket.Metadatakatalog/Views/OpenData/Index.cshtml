@using Kartverket.Metadatakatalog.Models.ViewModels
@using Kartverket.Metadatakatalog.Helpers
@model SearchViewModel

@{
    ViewBag.Title = Resources.UI.OpenData;
}

@section breadcrumb {
    <li class="active">@Resources.UI.OpenData</li>
}


<div id="feedback-alert" class="alert alert-success alert-dismissible" role="alert">
    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <span class="message"></span>
</div>

<section class="heading">
    <div class="row">
        <div class="col-sm-12">
            <h1 class="small-h1">
                @ViewBag.Title
            </h1>
        </div>
        <div class="col-sm-12">
            <span class="separator-lg"></span>
        </div>
        <div class="col-sm-9">
            <p>@Resources.UI.OpenDataText</p>
        </div>
    </div>
</section>

@{
    string url = HttpContext.Current.Request.Url.AbsoluteUri; url = url.Replace("aapne-data", "api/aapnedata");
    Uri uri = new Uri(url);
    string path = String.Format("{0}{1}{2}{3}", uri.Scheme,
    Uri.SchemeDelimiter, uri.Authority, uri.AbsolutePath);
    string querystring = Request.QueryString.ToString();
    querystring = querystring.Replace(".name", "name"); querystring = querystring.Replace(".value", "value");
    var qs = HttpUtility.ParseQueryString(querystring);
    System.Collections.Specialized.NameValueCollection qsCol = new System.Collections.Specialized.NameValueCollection(qs);
    qs.Clear();
    foreach (string key in qsCol)
    {
        qs.Add(key.ToLower(), qsCol[key]);
    }
    qs.Set("Offset", "1"); qs.Set("limit", Model.NumFound.ToString()); qs.Add("mediatype", "csv");
    string query = qs.ToString(); string urlCSV = path + "?" + query;
}



<div id="vue-container" class="row">

    <div class="col-md-9">
        <!--  <div is="facet-filter" filter-type="tabs" class="facet-filter"></div>-->
        @if (Model.Result != null)
        {
            <div is="theme-group"></div>
        }
        <div class="margin-top-10">
            @Html.Partial("_Pagination", Model)
        </div>
    </div>

    <div class="col-sm-12 col-md-3 pull-left hidden-sm hidden-xs">
        <aside>
            <h3 class="">@Resources.UI.FilterSearch:</h3>
            <span class="separator-small"></span>
            <div is="facet-filter" filter-type="sidebar" class="facet-filter"></div>
            <h3 class="" style="padding-top: 40px;">@Resources.UI.Pages</h3>
            <span class="separator-small"></span>
            @Html.Partial("_FilterPages")

            <div class="save-as-menu">
                <h3 style="padding-top: 40px;">@Resources.UI.SaveAs:</h3>
                <span class="separator-small"></span>

                <div class="no-padding-bottom save-as-dropdown">
                    <div class="custom-select">
                        <select onchange="additionalView(this.value)" class="form-control">
                            <option value="csvUrl" selected="selected">CSV</option>
                        </select>
                    </div>
                </div>
                <div id="saveButtons" class="no-padding-bottom save-as-buttons">
                    <a class="btn" id="csvUrl" href="@urlCSV">@Resources.UI.Save</a>
                </div>
            </div>
        </aside>
    </div>

</div>


@section scripts {
    @Html.Partial("_ThemeGroup", Model)
    @Html.Partial("_FacetFilter", Model)

    <script>

        // Setter url for søkeresultat
        setMainSearchUrl('aapne-data');
        setMainSearchApiUrl('search?facets[0]name=dataaccess&facets[0]value=Åpne data');

    </script>

    <script>
        function showAlert(message, colorClass) {
            $('#feedback-alert').attr('class', 'alert alert-dismissible alert-' + colorClass);
            $('#feedback-alert .message').html(message);
            $('#feedback-alert').show();
        }

        $(document).ready(function () {
            $("#orderby").change(
                 function () {
                     location.href = $(this).val();
                 }
             );
        });

        $(document).ready(function () {
            @if (Html.DownloadServiceEnabled())
            {
            <text>
            if (localStorage.getItem("orderItems") != null) {
                var storedOrderItems = JSON.parse(localStorage["orderItems"]);
                var orderitemCount = storedOrderItems.length;
                if (orderitemCount > 0) {
                    $('#orderitem-count').text(orderitemCount);
                    $('#orderitem-count-text').text(' datasett');
                    updateAllCartButtons(storedOrderItems);
                } else {
                    $('#orderitem-count').text('');
                    $('#orderitem-count-text').text('Kurven er tom');
                }
            } else {
                $('#orderitem-count').text('');
                $('#orderitem-count-text').text('Kurven er tom');
            }
            </text>
            }
        });
    </script>
    <script>
        var Search = new Vue({
            el: "#vue-container",
            components: {
                ThemeGroup: ThemeGroup,
                FacetFilter: FacetFilter
            },
            data: {
                viewType: 'tableView',
                selectedFields: [
                    { name: 'title', size: '5' },
                    { name: 'owner', size: '4' },
                    { name: 'openData', size: '1' }
                ],
                selectedButtons: [
                    'showInMapButton',
                    'addToCartButton'
                ]
            }
        });
    </script>
}
