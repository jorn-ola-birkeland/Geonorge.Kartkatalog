@using Kartverket.Metadatakatalog.Helpers
@using Resources
@model MetadataViewModel
@{
    ViewBag.Title = Model.Title + (Model.ContactMetadata != null ? " - " + Model.ContactMetadata.Organization : "");
    ViewBag.MetaDescription = Model.Abstract;
    var urlCSV = Html.KartkatalogenUrl() + "/api/relateddata/" + Model.Uuid + "?mediatype=csv";
}

@section breadcrumb {
    <li class="active">@Model.Title</li>
}


@helper ShowContact(string label, Contact contact)
{
if (contact != null)
{
        <p>
            <strong>@label:</strong><br />
            <a href="mailto:@contact.Email">
                @if (!string.IsNullOrWhiteSpace(contact.Name))
                {
                    <text>@contact.Name, </text>
                }
                @contact.Email
            </a> &ndash; @contact.Organization
        </p>
}
}

<div id="feedback-alert" class="alert alert-success alert-dismissible" role="alert">
    <button type="button" class="close" data-dismiss="alert" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
    <span class="message"></span>
</div>

<section class="heading">
    <div class="row">
        <div class="col-sm-12">
            <h1>@Model.Title</h1>
            <span class="label @HtmlHelperExtensions.HierarchyLevelLabel(Model.GetHierarchyLevelTranslated())">@Model.GetHierarchyLevelTranslated()</span>
        </div>
        <div class="col-sm-12">
            <span class="separator-lg"></span>
        </div>
    </div>
</section>



@Html.Partial("VueComponents/_TopRowButtons")
@Html.Partial("VueComponents/Helpers/_SetVariablesForResultItem", Model)

@*Template for a table row*@

<script type="text/x-template" id="resultItemRow">
    <div>
        <div class="resultItemRow">
            <div class="row">

                @*Tittel*@
                <div class="col-sm-3">
                    <div is="table-title" v-bind:metadata="resultItem"></div>
                </div>
                
                @*Distribusjonstype *@
                <div class="col-sm-2">
                    <div is="table-distribution-type" v-bind:metadata="resultItem"></div>
                </div>

                @*Organisasjon*@
                <div class="col-sm-2">
                    <div is="table-owner" v-bind:metadata="resultItem"></div>
                </div>

                @*Åpne data*@
                <div class="col-xs-1 text-center">
                    <div is="table-open-data" v-bind:metadata="resultItem"></div>
                </div>

                @*Kart*@
                <div class="col-xs-1 text-center">
                    <div is="table-row-buttons" v-bind:metadata="resultItem" v-bind:listOfButtons="['showInMapButton']"></div>
                </div>

                @*Last ned*@
                <div class="col-xs-1 text-center">
                    <div class="center-block" is="table-row-buttons" v-bind:metadata="resultItem" v-bind:listOfButtons="['addToCartButton']"></div>
                </div>
                
                @*Format*@
                <div class="col-xs-1">
                    <div v-for="distribution in resultItem.DistributionFormats">
                        <span class="label label-default" style="margin-bottom: 1px; width: auto;">{{distribution.Name}}</span>
                    </div>
                </div>
            </div>
        </div>

        <div class="clearfix"></div>
    </div>

</script>

@* *** HANDLINGSKNAPPER *** *@
<div id="topRowButtons" class="margin-bottom-10">
    <div is="top-row-buttons" v-bind:metadata="@Json.Encode(Model)"></div>
</div>



@* Vue code for resultitem*@
@Html.Partial("_resultItemRow")


<div class="row margin-top-10">

    @* *** Beskrivelse tekst *** *@
    <article class="col-md-8">
        <div class="row">
            <div class="col-sm-12">
                <p>@Model.Abstract</p>
            </div>

            <div class="col-sm-12">
                <script>
                    function getMetadata(uuid) {
                        $.getJSON('/api/search?text=${uuid}',
                            function(result) {
                                if (result.length != 0) {
                                    if (result.Results[0] != null) {
                                        const title = result.Results[0].Title;
                                        $('#related-${uuid}').text(title);
                                    } else
                                        $('#related-${uuid}').text("Tittel mangler");
                                } else {
                                    $('#related-${uuid}').text("Tittel mangler");
                                }
                            });
                    };
                </script>

                @if (!string.IsNullOrWhiteSpace(Model.ParentIdentifier))
            {
                    <h3>Overordnede data</h3>
                    <script>getMetadata('@Model.ParentIdentifier');</script>
                    <a id="related-@Model.ParentIdentifier" href="/metadata/org/title/@Model.ParentIdentifier" title="Overordnede metadata for @Model.Title">
                    </a>
                }

                @if (!string.IsNullOrWhiteSpace(Model.SpecificUsage))
            {
                    <h2>Bruksområde</h2>
                    <p>@Model.SpecificUsage</p>
                }

            </div>

        </div>
    </article>

    @* *** Beskrivelse bilde *** *@
    <aside class="col-sm-4">
        <div class="listblock size-12 col-sm-12 ">
            @if (Model.Thumbnails != null && Model.Thumbnails.Count > 0)
            {
                <img src="@Url.Action("Index", "Thumbnail", new {uuid = Model.Uuid, type = "small"})" w width="300" class="pull-right" alt="Forhåndsvisning av data." />
            }
        </div>
    </aside>

    <div id="metadata">
       
        @* *** Distribusjoner ****@
        <div class="col-md-12">
            <h3>Distribusjoner</h3>
            <span class="separator-lg"></span>

            <div class="row resultItemRowTableHeader">
                <div class="col-sm-3"><p>Tittel</p></div>
                <div class="col-sm-2"><p>Type</p></div>
                <div class="col-sm-2"><p>Dataeier</p></div>
                <div class="col-sm-1"><p>Åpne data</p></div>
                <div class="col-sm-1"><p>Kart</p></div>
                <div class="col-sm-1"><p>Last ned</p></div>
                <div class="col-sm-2"><p>Format</p></div>
            </div>
            <div class="menu-separator search-results-table-heading"></div>
            <div v-for="item in distributionlist" class="table-border-bottom">
                <div is="resultItem" v-bind:result-item="item">
                </div>
            </div>
            <div class="clearfix"></div>
        </div>

        @* *** Relaterte data ****@
        <div v-if="model.HierarchyLevel == 'service' && model.Related && model.Related.length > 0" class="col-md-12">
            @if (Model.Related != null && Model.Related.Count > 0)
            {
                <div class="row search-result-navigation">
                    <div class="col-sm-8">
                        <h3>Relaterte data</h3>
                        <span class="separator-lg"></span>
                    </div>

                    <div class="col-md-4 pull-right">
                        <div class="save-as-menu pull-right" style="margin-top: 50px">
                            <div class="no-padding-bottom save-as-dropdown">
                                <div class="custom-select">
                                    <select onchange="additionalView(this.value)" class="form-control">
                                        <option value="csvUrl" selected="selected">CSV</option>
                                    </select>
                                </div>
                            </div>
                            <div id="saveButtons" class="no-padding-bottom save-as-buttons">
                                <a class="btn" id="csvUrl" href="@urlCSV">Lagre</a>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="clearfix"></div>
                <div class="row resultItemRowTableHeader">
                    <div class="col-sm-3"><p>Tittel</p></div>
                    <div class="col-sm-2"><p>Type</p></div>
                    <div class="col-sm-2"><p>Dataeier</p></div>
                    <div class="col-sm-1"><p>Åpne data</p></div>
                    <div class="col-sm-1"><p>Kart</p></div>
                    <div class="col-sm-1"><p>Last ned</p></div>
                    <div class="col-sm-2"><p>Format</p></div>
                </div>

                <div class="menu-separator search-results-table-heading"></div>

                <div v-for="item in relatedDataList" v-bind:class="tableBorder">
                    <div is="resultItem" v-bind:result-item="item"></div>
                </div>
                <div class="clearfix"></div>
            }
        </div>
    </div>
    @* *** Generell info *** *@
    <article>
        @if (!Model.IsDatasetBundle())
            {
            @* ** Kontaktinformasjon ** *@
            <div class="col-sm-6">
                <h3>Kontaktinformasjon</h3>
                @if (Model.ContactOwner != null)
                {
                    <a href="@Url.Action("Organization", "Metadata", new {OrganizationSeoName = Model.OrganizationSeoName()})" title="Vis alle geografiske tjenester og datasett fra @Model.ContactOwner.Organization">
                        @if (!string.IsNullOrWhiteSpace(Model.OrganizationLogoUrl))
                        {
                            <img src="@Model.OrganizationLogoUrl" alt="Logo @Model.ContactOwner.Organization" width="100" class="image-margin-bottom" />
                        }
                    </a>                    }
                @ShowContact("Metadatakontakt", Model.ContactMetadata)
                @ShowContact("Faglig kontakt", Model.ContactOwner)
                @ShowContact("Teknisk kontakt", Model.ContactPublisher)
            </div>

            @* ** Distribusjon ** *@<div class="col-sm-6">
                <h3>Distribusjon</h3>
                @DisplayValue("Representasjonsform", Model.SpatialRepresentation)
                @if (Model.DistributionFormats != null)
                {
                    if (Model.DistributionFormats.Any())
                    {
                        <strong>Format: </strong>
                        <ul>
                            @foreach (var format in Model.DistributionFormats)
                            {
                                if (!string.IsNullOrWhiteSpace(format.Version))
                                {
                                    <li>@format.Name @format.Version</li>
                                }
                                else
                                {
                                    <li>@format.Name</li>
                                }
                            }
                        </ul>
                    }
                }
                @if (Model.DistributionDetails != null && Model.DistributionDetails.Protocol != null && Model.DistributionDetails.Protocol != "GEONORGE:OFFLINE")
                {
                    <text>@DisplayValue("Distribusjonstype", Model.DistributionDetails.ProtocolName)</text>
                    if (!string.IsNullOrWhiteSpace(Model.DistributionDetails.URL))
                    {
                        if (Model.IsService() || Model.IsServiceLayer())
                        {
                            <p>
                                <strong>Get Capabilities Url:</strong> <a href="@Model.DistributionDetails.DistributionDetailsGetCapabilitiesUrl()">
                                    @Model.DistributionDetails.URL <i class="custom-icon-sm custom-icon-eksternlink"></i>
                                </a>
                            </p>
                        }
                    }
                    <text>@DisplayValue("Geografisk distribusjonsinndeling", Model.UnitsOfDistribution)</text>
                    <text>@DisplayValue("Lagnavn", Model.DistributionDetails.Name)</text>
                }
                @if (Model.ReferenceSystems != null)
                {
                    if (Model.ReferenceSystems.Any())
                    {
                        <strong>Romlig referansesystem: </strong>
                        <ul>
                            @foreach (var refsys in Model.ReferenceSystems)
                            {
                                <li>@refsys.CoordinateSystem</li>
                            }
                        </ul>
                    }
                }
            </div>

            @* *** Restriksjoner *** *@
        if (Model.Constraints != null)
        {
            <div class="col-sm-6">
                <h3>Restriksjoner</h3>
                @DisplayValue("Bruksbegrensninger", Model.Constraints.UseLimitations)
                @DisplayValue("Tilgangsrestriksjoner", Model.Constraints.AccessConstraints)
                @DisplayValue("Brukerrestriksjoner", Model.Constraints.UseConstraints)
                @DisplayValue("Andre restriksjoner", Model.Constraints.OtherConstraints)
                @if (Model.Constraints != null && Model.Constraints.OtherConstraintsLink != null)
                    {
                    <p>
                        <strong>Lisens: </strong> <a href="@Model.Constraints.OtherConstraintsLink" target="_blank">@Model.Constraints.OtherConstraintsLinkText</a><i class="custom-icon-sm custom-icon-eksternlink"></i>
                    </p>
                }
                @DisplayValue("Sikkerhetsnivå", Model.Constraints.SecurityConstraints)
                @DisplayValue("Lovhenvisning", Model.Constraints.SecurityConstraintsNote)
            </div>
        }

        @* *** Hjelp *** *@
        if (!string.IsNullOrEmpty(Model.SupplementalDescription) || !string.IsNullOrEmpty(Model.HelpUrl))
        {
            <div id="help" class="col-sm-12">
                <h2>Hjelp</h2>
            </div>
            <div class="col-sm-12">
                @if (!string.IsNullOrEmpty(Model.SupplementalDescription))
                    {
                    <p>@Model.SupplementalDescription</p>
                }
                @if (!string.IsNullOrEmpty(Model.HelpUrl))
                    {
                    <a href="@Model.HelpUrl" class="btn" target="_blank"><span class="custom-icon custom-icon-eksternlink"></span> Vis hjelp</a>
                }
            </div>
        }

        @* *** Detaljert informasjon *** *@
            <div class="col-sm-12">
                <a href="#" data-content-toggle="detailed-info" class="toggle-content">
                    <h2>
                        <span class="toggle-icon"></span>Detaljert informasjon
                    </h2>
                </a>
            </div><div id="metadata-text-details" class="detailed-info" style="display: none;">
                @* ** Kvalitet ** *@
                <div class="col-sm-6">
                    <h3>Kvalitet</h3>
                    @DisplayValue("Målestokkstall", Model.ResolutionScale)
                    @DisplayValue("Status", Model.Status)
                    @DisplayValue("Prosesshistorie", Model.ProcessHistory)
                    @if (Model.QualitySpecifications != null)
                    {
                        <h3>Konformitet</h3>
                        for (var s = 0; s < Model.QualitySpecifications.Count; s++)
                        {
                            <p>
                                <strong>Standard: </strong>@Model.QualitySpecifications[s].Title
                            </p>
                            <p>
                                <strong>Dato: </strong>@Html.DisplayFor(m => Model.QualitySpecifications[s].Date) (@Model.QualitySpecifications[s].DateType)
                            </p>
                            <p>
                                <strong>Forklaring av resultat: </strong>@Model.QualitySpecifications[s].Explanation
                            </p>
                            <p> @(Model.QualitySpecifications[s].Result ? "Godkjent" : "Ikke godkjent") </p>
                            if (Model.QualitySpecifications.Count > 1 && s != Model.QualitySpecifications.Count - 1)
                            {
                                <hr />
                            }
                        }
                    }
                    @if (!string.IsNullOrWhiteSpace(Model.Purpose))
                    {
                        <h3>Formål</h3>
                        <p>@Model.Purpose</p>
                    }
                </div>
                @* ** Tid og rom ** *@
                <div class="col-sm-6">
                    <h3>Tid og rom</h3>
                    @if (Model.DateUpdated != null)
                    {
                        <p>
                            <strong>Oppdatert(Ressurs):</strong> @Html.DisplayFor(m => m.DateUpdated)
                        </p>
                    }
                    @if (Model.DateMetadataUpdated != null)
                    {
                        <p>
                            <strong>Oppdatert(Metadata):</strong> @Html.DisplayFor(m => m.DateMetadataUpdated)
                        </p>
                    }
                    @if (Model.DatePublished != null)
                    {
                        <p>
                            <strong>Publisert:</strong> @Html.DisplayFor(m => m.DatePublished)
                        </p>
                    }
                    @if (Model.DateCreated != null)
                    {
                        <p>
                            <strong>Opprettet:</strong> @Html.DisplayFor(m => m.DateCreated)
                        </p>
                    }
                    @if (Model.DateMetadataValidFrom != null)
                    {
                        <p>
                            <strong>Gyldighetsperiode:</strong> @Html.DisplayFor(m => m.DateMetadataValidFrom) - @Html.DisplayFor(m => m.DateMetadataValidTo)
                        </p>
                    }
                    @if (Model.MaintenanceFrequency != null)
                    {
                        <p>
                            <strong>Oppdateringshyppighet:</strong> @Model.MaintenanceFrequency
                        </p>
                    }
                    @if (Model.KeywordsPlace != null && Model.KeywordsPlace.Count > 0)
                    {
                        @DisplayKeywords("Geografisk område", Model.KeywordsPlace)
                    }
                    @if (Model.BoundingBox != null)
                    {
                        <p>
                            <strong>Geografisk utstrekning:</strong>
                            <ul>
                                <li>Nord: @Model.BoundingBox.NorthBoundLatitude</li>
                                <li>Sør: @Model.BoundingBox.SouthBoundLatitude</li>
                                <li>Øst: @Model.BoundingBox.EastBoundLongitude</li>
                                <li>Vest: @Model.BoundingBox.WestBoundLongitude</li>
                            </ul>
                        </p>
                    }
                </div>
                @* ** Nøkkelord ** *@
                <div class="col-sm-6">
                    <h3>Nøkkelord</h3>
                    @DisplayKeywords("Tema", Model.KeywordsTheme)
                    @DisplayKeywords("Nasjonal temakategori", Model.KeywordsNationalTheme)
                    @DisplayKeywords("Samarbeid og lover", Model.KeywordsNationalInitiative)
                    @DisplayKeywords("Inspire", Model.KeywordsInspire)
                    @DisplayKeywords("Annet", Model.KeywordsOther)
                    @DisplayKeywords("Begreper", Model.KeywordsConcept)
                    @if (!string.IsNullOrWhiteSpace(Model.TopicCategory))
                    {
                        <p>
                            <strong>Tematisk hovedkategori:</strong> @Model.TopicCategory
                        </p>
                    }
                </div>
            </div>            }
    </article>
</div>
@* Last ned XML og rediger metadata knapper*@
<div class="row">
    <div class="col-md-12">
        <div>
            <a href="@Model.MetadataXmlUrl" class="btn show-loading-animation" data-loading-message="Henter XML data"><span class="glyphicon glyphicon-file"></span> Last ned metadata XML</a>
            <a href="@Model.MetadataEditUrl" class="btn show-loading-animation" data-loading-message="Henter metadata"><span class="glyphicon glyphicon-pencil"></span> Rediger metadata</a>
        </div>
    </div>
</div>

@helper DisplayValue(string label, string value)
{
if (!string.IsNullOrWhiteSpace(value))
{
        <p>
            <strong>@label: </strong>@value
        </p>
}
}

@helper DisplayKeywords(string label, List<Keyword> keywords)
{
if (keywords != null && keywords.Any())
{
        <strong>@label:</strong>
        <ul>
            @foreach (var keyword in keywords)
            {
                if (!string.IsNullOrEmpty(keyword.KeywordLink))
                {
                    <li>
                        <a href="@keyword.KeywordLink" target="_blank">@keyword.KeywordValue</a>
                    </li>
                }
                else
                {
                    <li>@keyword.KeywordValue</li>
                }
            }
        </ul>
}
}

@Html.Partial("VueComponents/Helpers/_ConvertModelToResultItem")


@section scripts {

    <script>
        @{
            var itemUuid = Model.Uuid != null ? Model.Uuid : "";
            var itemTitle = Model.Title != null ? Model.Title : "";
            var itemOrganizationLogoUrl = Model.OrganizationLogoUrl != null ? Model.OrganizationLogoUrl : "";
            var itemDistributionDetailsUrl = Model.DistributionDetails != null && Model.DistributionDetails.URL != null ? Model.DistributionDetails.URL : "";
            var javaScriptSerializer = new System.Web.Script.Serialization.JavaScriptSerializer();
        }

        var uuid = '@itemUuid';
        var title = '@itemTitle';
        var organizationLogoUrl = '@itemOrganizationLogoUrl.Replace("http://", "https://")';
        var distributionDetailsUrl = '@itemDistributionDetailsUrl.Replace("http://", "https://")';
        var rootUrl = 'metadata/uuid/';
        var theme = '@(Model.KeywordsNationalTheme != null && Model.KeywordsNationalTheme.Count > 0 ? Model.KeywordsNationalTheme[0].KeywordValue : "")';
        var orgname = '@(Model.ContactOwner != null ? Model.ContactOwner.Organization : "")';

        var topRowButtons = new Vue({
            el: "#topRowButtons",
            data: {},
            components: {
                TopRowButtons: TopRowButtons
            }
        });

        //Main vue model
        var vueModel = new Vue({
            el: '#metadata',
            data: {
                tableBorder: "",
                distributionlist: [],
                relatedDataList: [],
                model: @Html.Raw(HttpUtility.HtmlDecode(javaScriptSerializer.Serialize(Model))),
            },
            components: {
                ResultItem: ResultItemComponent
            },
            created: function() {
                $.ajax({
                    type: "GET",
                    url: "/api/distributions/" + uuid,
                    success: function (response) {
                        vueModel.distributionlist = vueModel.convertDistributionList(response);
                    }
                });
                this.relatedDataList = this.convertRelatedDataList();
            },
            methods: {
                convertDistributionList: function(distributionList) {
                    var distributionArray = new Array();
                    distributionList.forEach(function(distribution) {
                        console.log(distribution);
                        var resultItem = convertMetadataToResultItem(distribution);
                        distributionArray.push(resultItem);
                    }.bind(this));
                    return distributionArray;
                },
                getVersion: function(name, format) {
                    var version = name;

                    if (format) {
                        version += ' ${format}';
                    }
                    return ' (${version})';
                },
                
                convertRelatedDataList: function() {
                    if (this.model.Related) {
                        this.model.Related.forEach(function(item) {
                            var resultItem = convertMetadataToResultItem(item);

                            this.relatedDataList.push(resultItem);
                    }.
                    bind(this));
                    }
                        return this.relatedDataList;
                },
            },


        });

        function getServiceFeed() {
            $.ajax({
                type: "GET",
                url: "https://nedlasting.geonorge.no/geonorge/Tjenestefeed.xml",
                dataType: "xml",
                success: getFeedLink
            });
        }

        function getFeedLink(xml) {

            $(xml).find("entry").each(function() {
                const identifier_code = $(this)
                    .find("inspire_dls\\:spatial_dataset_identifier_code, spatial_dataset_identifier_code").text();
                if (uuid == identifier_code) {
                    const link = $(this).find("link").text();
                    $("#servicefeed").removeClass("disabled");
                    $("#servicefeed").removeAttr("disabled");
                    $("#servicefeed").prop("href", link);
                    return false;
                }

            });
        }

        $(document).ready(function() {
            $("#details-button").click(function() {
                $("#metadata-text-details").toggle();
            });

            if (typeof Storage !== "undefined") {
                if (localStorage.getItem('orderItems') != null) {
                    let orderItems = [];
                    orderItems = (JSON.parse(localStorage.getItem('orderItems')));
                    updateAllCartButtons(orderItems);
                }
            } else {
                console.log('no native support for HTML5 storage :(');
            }
        });

      
        $(window).load(function() {
            @if (Html.DownloadServiceEnabled())
            {
                <text>
                    if (typeof Storage !== "undefined") {

                        console.log('window.localStorage is available!');
                        const orderItems = [];
                        $('.add-to-cart-btn:not(.prevent-action)').click(function() {
                            addToCartButtonClick($(this));
                        });
                    } else {
                        console.log('no native support for HTML5 storage :(');
                    }
                </text>
            }

        });



        @if (Model.ShowMapLink() || Model.ShowServiceMapLink())
        {
            @:getServiceStatus("@Model.ServiceUuid", "@Model.Uuid");
        }

        @if (Model.Related != null)
        {
            foreach (var relatedContent in Model.Related)
            {
                if (relatedContent.ShowMapLink() || relatedContent.ShowServiceMapLink())
                {
                    @:getServiceStatus("@relatedContent.ServiceUuid", "@relatedContent.Uuid");
                }
            }
        }


        $('.btn-copy').tooltip({
            trigger: 'click',
            placement: 'bottom'
        });
        
        function setTooltip(btn, message) {
            btn.tooltip('hide')
                .attr('data-original-title', message)
                .tooltip('show');
        }

        function hideTooltip(btn) {
            setTimeout(function() {
                    btn.tooltip('hide');
                },
                1000);
        }

        $(document).ready(function() {
            var clipboard = new Clipboard('.btn-copy');

            clipboard.on('success',
                function(e) {
                    const btn = $(e.trigger);
                    setTooltip(btn, 'Kopiert');
                    hideTooltip(btn);
                });

            clipboard.on('error',
                function(e) {
                    const btn = $(e.trigger);
                    setTooltip(btn, 'Feilet!');
                    hideTooltip(btn);
                });
        });

    </script>
}
