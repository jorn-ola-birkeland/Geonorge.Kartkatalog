@using Kartverket.Metadatakatalog.Helpers

<script>
    var CLIPPERCOORDS;
    var fixedCoordinates = false;
    var areatype = "";
    var mapSelectionLayer = "";
    var canDownload = true;


    function sendMessage(msg) {
        var win = document.getElementById("iframe").contentWindow;
        win.postMessage(JSON.stringify(msg), '*');
    }


    function loadMap(vueObject) {
        var id = vueObject.metadata.uuid;
        var fixed = vueObject.capabilities.supportsGridSelection;
        var typeOfArea = vueObject.codelists.areaTypes[0];
        var mapselectionlayer = vueObject.capabilities.mapSelectionLayer;
        if (fixed) {
            fixedCoordinates = true;
            areatype = typeOfArea;
            mapSelectionLayer = mapselectionlayer;
            loadMapFixed(id, vueObject);
            return;
        }

        fixedCoordinates = false;

        var coverageParams = "";
        $.ajax({
            url: '/api/getdata/' + id + '',
            type: "GET",
            async: false,
            success: function (result) {
                coverageParams = result.CoverageUrl;
                if (typeof coverageParams == 'undefined')
                    coverageParams = '';
            }
        });

        conf = {
            center_latitude: "7226208",
            center_longitude: "378604",
            grid_folder: "/sites/all/modules/custom/kms_widget/grid/",
            koordinatsystem: "UTM32-EUREF89",
            selection_type: "3525",
            service_name: "fylker-utm32",
            zoom_level: "4",
        };

        window.addEventListener('message', function (e) {
            $("#setcoordinates").attr("disabled", true);
            var msg = JSON.parse(e.data);
            if (msg.type === "mapInitialized") {
                sendMessage({
                    "cmd": "setCenter",
                    "x": conf.center_longitude,
                    "y": conf.center_latitude,
                    "zoom": conf.zoom_level
                });
            } else {
      
               
                if (msg.cmd === "setVisible") return;

                var obj = msg;
                var reslist = document.getElementById('result');
                if (obj.feature != null) {
                    CLIPPERCOORDS = obj.feature.geometry.coordinates.toString();
                    CLIPPERCOORDS = CLIPPERCOORDS.replace(/,/g, " ");
                    var defaultCoordinatesystem = "32633";
                    var canDownload = {
                        "metadataUuid": vueObject.metadata.uuid,
                        "coordinates": CLIPPERCOORDS,
                        "coordinateSystem": defaultCoordinatesystem
                    };

                  

                    var urlCanDownload = (vueObject.metadata.canDownloadUrl !== undefined) ? vueObject.metadata.canDownloadUrl : false;
                    if (urlCanDownload) {

                        $.ajax({
                            url: urlCanDownload,
                            type: "POST",
                            dataType: 'json',
                            data: JSON.stringify(canDownload),
                            contentType: "application/json",
                            async: true,
                            error: function (jqXHR, textStatus, errorThrown) {
                                //Ignore error
                            },
                            beforeSend: function(){
                                showLoadingAnimation("Sjekker størrelse for valgt område");
                            },
                            success: function (data) {
                                if (data !== null) {
                                    if (!data.canDownload) {
                                        canDownload = false;
                                        clearAlertMessage();
                                        showAlert("Området er for stort til å laste ned, vennligst velg mindre område", "danger");
                                    } else {
                                        $("#setcoordinates").attr("disabled", false);
                                    }
                                }
                                hideLoadingAnimation();
                            },
                        });
                    }

                    if (canDownload) {


                        $("#setcoordinates").click(function () {
                            mainVueModel.resetProjectionSelections(vueObject);
                            mainVueModel.resetFormatSelections(vueObject);

                            vueObject.availableProjections = vueObject.codelists.projections;
                            vueObject.availableFormats = vueObject.codelists.formats;

                            vueObject.codelists.projections.forEach(function (projection) {
                                mainVueModel.setAvailableProjection(projection, vueObject.availableProjections)
                            });
                            vueObject.codelists.formats.forEach(function (format) {
                                mainVueModel.setAvailableFormat(format, vueObject.availableFormats)
                            });

                            var containsPolygonArea = false;
                            vueObject.codelists.areas.forEach(function (area, val) {
                                if (area.type == "polygon") {
                                    area.selected = true;
                                    containsPolygonArea = true;
                                }
                            });

                            if (!containsPolygonArea) {
                                if ($.inArray("polygon", vueObject.codelists.areaTypes) == -1) {
                                    vueObject.codelists.areaTypes.push("polygon");
                                }
                            }

                            vueObject.codelists.coordinates = CLIPPERCOORDS;
                            vueObject.codelists.coordinatesystem = defaultCoordinatesystem;

                            var arealist = $("select#" + vueObject.metadata.uuid + "areas");
                            if (arealist.val() == null) {
                                arealist.val(["Kart"]);
                            }
                            else {
                                arealistValues = arealist.val();
                                arealistValues.push("Kart");
                                arealist.val(arealistValues);
                            }
                            updateChosen();
                        });
                    }
                }
            }
        }, false);

        $("#container").html("<iframe src='@Html.SecureNorgeskartUrl()select.html" + coverageParams + "' id='iframe' name='iframe'></iframe>");

    };



    function loadMapFixed(metadataUuid, vueObject) {
        var areas = {};
        conf = { "service_name": mapSelectionLayer, "center_longitude": "378604", "center_latitude": "7226208", "zoom_level": "3" }

        window.addEventListener('message', function (e) {
            var msg = JSON.parse(e.data);
            if (msg.type === "mapInitialized") {
                sendMessage({
                    "cmd": "setCenter",
                    "x": conf.center_longitude,
                    "y": conf.center_latitude,
                    "zoom": conf.zoom_level
                });
                sendMessage({
                    "cmd": "setVisible",
                    "id": conf.service_name
                });
            } else {
                if (msg.cmd === "setVisible") return;
                var obj = msg;
                if (isJson(msg)) {
                    var data = JSON.parse(msg);
                    if (data["type"] == "mapInitialized") return;

                    var name = data["attributes"]["n"];
                    var areaname;
                    areaname = name;

                    var path = areaname;

                    if (data["cmd"] == "featureSelected") {
                        areas[path] = areaname;
                    }
                    if (data["cmd"] == "featureUnselected") {
                        delete areas[path];
                    }
                }
            }
            var selectedAreas = [];
            for (area in areas) {
                selectedAreas.push(area);
            };
            var availableProjections = [];
            var availableFormats = [];
            vueObject.codelists.areas.forEach(function (area, val) {
                if ($.inArray(area.code, selectedAreas) !== -1) {
                    area.selected = true;
                    if (area.projections !== undefined) {
                        availableProjections = getAvailableProjections(area.projections, availableProjections);
                    }
                    if (area.formats !== undefined) {
                        availableFormats = getAvailableProjections(area.formats, availableFormats);
                    }
                } else {
                    area.selected = false;
                }
            });
            vueObject.codelists.availableProjections = availableProjections;
            vueObject.codelists.availableFormats = availableFormats;
        }, false);


        $("#container").html("<iframe src='@Html.SecureNorgeskartUrl()nedlasting.html#" + conf.zoom_level + "/" + conf.center_longitude + "/" + conf.center_latitude + "/+" + conf.service_name + "' id='iframe' name='iframe'></iframe>");

    }

    function isJson(str) {
        try {
            JSON.parse(str);
        } catch (e) {
            return false;
        }
        return true;
    }

    function setCoordinates() {

        uuid = $('#setcoordinates').attr('uuid');

        if (fixedCoordinates) {
            var orderItemSelectOmraader = $('#orderuuid' + uuid + ' .selectOmraader');

            orderItemSelectOmraader.find("option").prop("selected", false)

            orderItemSelectOmraader = $('#orderuuid' + uuid + ' .selectOmraader');

            for (var key in areas) {
                val = areatype + "_" + key;
                orderItemSelectOmraader.find("option[value=" + val + "]").prop("selected", "selected");
            }

            orderItemSelectOmraader.trigger("chosen:updated");

            var orderItems = JSON.parse(localStorage["orderItems"]);
            setSelectedValues(orderItems, 'selectProjeksjoner', 'projections');
            setSelectedValues(orderItems, 'selectFormater', 'formats');
            setSelectedValues(orderItems, 'selectOmraader', 'areas');

            areas = {}

        }
        else {
            localStorage[uuid + '.selected.coordinates'] = CLIPPERCOORDS;
            getSelectedCoordinates(uuid, 'coordinates', 'coordinates');

            var supportsProjectionSelection = (localStorage.getItem(uuid + '.capabilities.supportsProjectionSelection') === "true");
            var supportsFormatSelection = (localStorage.getItem(uuid + '.capabilities.supportsFormatSelection') === "true");

            var orderItemSelectProjeksjoner = $('#orderuuid' + uuid + ' .selectProjeksjoner');
            orderItemSelectProjeksjoner.attr('name', uuid + '-projection');
            orderItemSelectProjeksjoner.empty();
            populateProjectionList(uuid, supportsProjectionSelection);

            orderItemSelectProjeksjoner.trigger("chosen:updated");
            var orderItemSelectFormater = $('#orderuuid' + uuid + ' .selectFormater');
            orderItemSelectFormater.attr('name', uuid + '-formats');
            orderItemSelectFormater.empty();
            populateFormatList(uuid, supportsFormatSelection);
            orderItemSelectProjeksjoner.attr("disabled", false);
            orderItemSelectProjeksjoner.trigger("chosen:updated");
            orderItemSelectFormater.attr("disabled", false);
            orderItemSelectFormater.trigger("chosen:updated");

        }

    }

    function resizeIframe(iframe) {
        var windowHeight = $(window).height();
        var iframeHeight = windowHeight - 125;
        iframe.height(iframeHeight);
    }
</script>

