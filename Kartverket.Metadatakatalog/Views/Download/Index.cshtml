@using Newtonsoft.Json

@{
    ViewBag.Title = "Index";
}

<h1></h1>
<div class="page-header">
    <h3 class="h-md">Min handlekurv</h3>
    <hr>
</div>
<div class="progress">
    <div class="progress-bar progress-bar-striped active" role="progressbar" aria-valuenow="2" aria-valuemin="0" aria-valuemax="100" style="min-width: 8em; width: 2%;">
        Laster datasett
    </div>
</div>
@using (Html.BeginForm("Order", "Download", FormMethod.Post))
{
   
<div class="panel panel-default">


    <div class="list-group" id="orderlist">
    </div>

</div>
<div class="row">
    <div class="col-md-12">
        <div class="form-group">
            <div class="pull-right">
                <button class="btn btn-danger" id="remove-all-items"><span class="glyphicon glyphicon-remove"></span> Fjern alle</button>
            </div>
            <div class="clearfix"></div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div class="form-group">
            <div class="pull-right">
                <button class="btn btn-primary"><span class="glyphicon glyphicon-shopping-cart"></span> Handle mer</button>
            </div>
            <div class="clearfix"></div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div class="form-group">
            <div class="pull-right">
                <button class="btn btn-default">Avbryt</button>
                <button class="btn btn-primary"><span class="glyphicon glyphicon-save"></span> Last ned</button>
            </div>
            <div class="clearfix"></div>
        </div>
    </div>
</div>


<div class="row">
    <div class="col-md-12">
        <div class="form-group">
            <div class="pull-right">
                
                <button id="btn-test" class="btn btn-success"><span class="glyphicon glyphicon-ok-circle"></span>Test</button>
            </div>
            <div class="clearfix"></div>
        </div>
    </div>
</div>


<div class="modal fade" id="kartModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Områdevelger</h4>
            </div>
            <div class="modal-body">
                <iframe longdesc="" title="" src="http://www.norgeskart.no/dynamisk-med-navigasjon.html#6/166195/6636879/+embed.box" width="100%" height="424"></iframe>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Avbryt</button>
                <button type="button" class="btn btn-primary">Legg til område</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="remove-all-items-modal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Fjerning av datasett</h4>
            </div>
            <div class="modal-body">
                Er du sikker på at du vil fjerne alle datasett fra handlekurven?
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Nei</button>
                <button type="button" id="remove-all-items-submit" class="btn btn-primary">Ja</button>
            </div>
        </div>
    </div>
  
</div>
}
@section scripts {
    <script src="~/Scripts/chosen.jquery.js"></script>
    <script>
        var objCount = 0;
        var objCountLoaded = 0;

        function getJsonObjects(data, segment, uuid) {
            if (segment == null) segment = '';
            var val;
            var localStorageKey;
            var items = [];
            var parentObj = '';
            $.each(data, function (key, val) {
                if (segment != '' && segment != null) {
                    localStorageKey = uuid + segment + '.' + key;
                } else {
                    localStorageKey = uuid + key;
                }

                if (typeof val == 'object') {
                    if (typeof key == 'string') {
                        parentObj = '.' + key;
                    }
                    $.each($(this), function (key, val) {
                        items.push(val);
                    });

                } else {
                    localStorage[localStorageKey] = val;
                }
            });
            if (items.length > 0) {
                localStorageKey = uuid + segment + parentObj;
                localStorage[localStorageKey] = JSON.stringify(items);
            }
        }

        function getJsonData(baseuri, segments, uuid) {
            segmentUri = '';
            segmentString = '';
            $.each(segments, function (pos, segment) {
                segmentUri += '/' + segment;
                segmentString += '.' + segment;
            });

            var jsonUri = 'http://download.dev.geonorge.no/' + baseuri + segmentUri + '/' + uuid + '?json=true';
            $.ajax({
                url: jsonUri,
                dataType: 'json',
                async: false,
                success: function (data) {
                    getJsonObjects(data, segmentString, uuid);
                    if (data.supportsProjectionSelection) {
                        getJsonData('api', ['codelists', 'projection'], uuid);
                    }
                    if (data.supportsFormatSelection) {
                        getJsonData('api', ['codelists', 'format'], uuid);
                    }
                    if (data.supportsPolygonSelection) {
                        getJsonData('api', ['codelists', 'polygon'], uuid);
                    }
                    if (data.supportsAreaSelection) {
                        getJsonData('api', ['codelists', 'area'], uuid);
                    }
                }
            });
        }

        $(document).ready(function () {
            $("select").chosen();

            // Midlertidig seeding av dataset i localStorage
            var orderItems = [];
            orderItems.push("75461f65-eaea-4495-b2ab-3bc04d261669");
            orderItems.push("aee42bb6-d0e9-4d70-86fe-6ea76c381055");
            orderItems.push("ea192681-d039-42ec-b1bc-f3ce04c189ac");
            orderItems.push("442cae64-b447-478d-b384-545bc1d9ab48");
            orderItems.push("58e0dbf8-0d47-47c8-8086-107a3fa2dfa4");
            if (Modernizr.localstorage) {
                console.log('window.localStorage is available!');
                localStorage["orderItems"] = JSON.stringify(orderItems);

            } else {
                console.log('no native support for HTML5 storage :(');
            }

            var storedOrderItems = JSON.parse(localStorage["orderItems"]);
            objCount = storedOrderItems.length;
            $.each(storedOrderItems, function (key, val) {
                getJsonData('api', ['capabilities'], val);
                objCountLoaded++;
                var percentLoaded = (objCountLoaded / objCount) * 100;
                $(".progress-bar").css('width', percentLoaded + '%');
                $(".progress-bar").attr('aria-valuenow', percentLoaded);
                $(".progress-bar").text(objCountLoaded + ' av ' + objCount + ' datasett er lastet');
            });
        });

        $(document).ready(function () {
            // Inkludering av OrderItem partial view
            var content = '@Html.Raw(System.Text.RegularExpressions.Regex.Replace(Html.Partial("_OrderItem").ToString(), @"\r\n?|\n", ""))';
            orderItems = (JSON.parse(localStorage.getItem('orderItems')));
            $.each(orderItems, function (key, val) {
                var uuid = val;
                $("#orderlist").append('<div id="orderuuid' + val + '" class="order-item">' + content + '</div>');
                $("#orderuuid" + val + " .uuid").append(val);
                $("#orderuuid" + val + " .remove-item").attr('uuid', val);

                var supportsProjectionSelection = localStorage.getItem(val + '.capabilities.supportsProjectionSelection');
                var supportsFormatSelection = localStorage.getItem(val + '.capabilities.supportsFormatSelection');
                var supportsPolygonSelection = localStorage.getItem(val + '.capabilities.supportsPolygonSelection');
                var supportsAreaSelection = localStorage.getItem(val + '.capabilities.supportsAreaSelection');

                // Populering av Projeksjonliste
                if (supportsProjectionSelection) {
                    var orderItemProjeksjoner = (JSON.parse(localStorage.getItem(val + '.codelists.projection')));
                    var orderItemSelectProjeksjoner = $('#orderuuid' + val + ' .selectProjeksjoner');
                    orderItemSelectProjeksjoner.attr('name', uuid + '-projection');
                   // var selectedProjeksjoner = JSON.parse(localStorage['' + uuid + '.selected.projections']);
                    $.each(orderItemProjeksjoner, function (key, val) {

                        orderItemSelectProjeksjoner.append($("<option />").val(val.name).text(val.name));
                       // if (selectedProjeksjoner.)
                    });
                } else {
                    var formElement = $('#orderuuid' + val + ' .selectProjeksjoner').closest('.form-group');
                    formElement.addClass('disabled');
                }

                // Populering av Filformatliste
                if (supportsFormatSelection) {
                    var orderItemFormater = (JSON.parse(localStorage.getItem(val + '.codelists.format')));
                    var orderItemSelectFormater = $('#orderuuid' + val + ' .selectFormater');
                    orderItemSelectFormater.attr('name', uuid + '-formats');
                    $.each(orderItemFormater, function (key, val) {
                        orderItemSelectFormater.append($("<option />").val(val.name).text(val.name));
                    });
                } else {
                    var formElement = $('#orderuuid' + val + ' .selectFormater').closest('.form-group');
                    formElement.addClass('disabled');
                }

                // Populering av Områdeliste
                if (supportsAreaSelection) {
                    var orderItemOmraader = (JSON.parse(localStorage.getItem(val + '.codelists.area')));
                    var orderItemSelectOmraader = $('#orderuuid' + val + ' .selectOmraader');
                    orderItemSelectOmraader.attr('name', uuid + '-areas');

                    var orderItemSelectOmraaderFylker = $('#orderuuid' + val + ' .selectOmraader .selectOmraaderFylker');
                    var orderItemSelectOmraaderKommuner = $('#orderuuid' + val + ' .selectOmraader .selectOmraaderKommuner');
                    $.each(orderItemOmraader, function (key, val) {
                        if (val.type == 'fylke') {
                            orderItemSelectOmraaderFylker.append($(
                                "<option />").val(val.name).text(val.name));
                        }
                        else if (val.type == 'kommune') {
                            orderItemSelectOmraaderKommuner.append($("<option />").val(val.name).text(val.name));
                        }
                        else {
                            orderItemSelectOmraader.append($("<option />").val(val.name).text(val.name));
                        }
                    });
                } else {
                    var formElement = $('#orderuuid' + val + ' .selectOmraader').closest('.form-group');
                    formElement.addClass('disabled');
                }

            });
        });

        $(document).ready(function () {
            $(".chosen-select").chosen();
            $('[data-toggle="tooltip"]').tooltip();
        });

        $(window).load(function () {
            $(".progress").fadeOut("slow");

            // Fjerning av datasett fra handlekurv
            $('#orderlist').on('click', '.remove-item', (function (e) {
                var uuid = $(this).attr('uuid');
                var uuidLength = uuid.length;
                var orderItems = JSON.parse(localStorage["orderItems"]);
                orderItems = $.grep(orderItems, function (value) {
                    return value != uuid;
                });
                localStorage["orderItems"] = JSON.stringify(orderItems);
                Object.keys(localStorage)
                      .forEach(function (key) {
                          if (key.substring(0, uuidLength) == uuid) {
                              localStorage.removeItem(key);
                          }
                      });
                $(this).closest('.order-item').remove();
            }));

            // Fjerning av alle datasett fra handlekurv
            //  $('#orderlist').on('click', '#remove-all-items', (function (e) {
            $('#remove-all-items').click(function () {
                $('#remove-all-items-modal').modal('show')
            });


            $('#remove-all-items-submit').click(function () {

                Object.keys(localStorage)
                      .forEach(function (key) {
                          if (key != 'visningstype') {
                              localStorage.removeItem(key);
                          }
                      });
                $('#remove-all-items-modal').modal('hide')
                $('.order-item').remove();
            });

            function getSelectedValues(orderItems, selectClass, name) {
                $.each(orderItems, function (key, val) {
                    // var orderItemId = $(this).attr('id');
                    var select = $('#orderuuid' + val).find('.' + selectClass);
                    var uuid = val;
                    $.each(select, function (key, val) {
                        var selectedValues = [];
                        var option = $(this).find('option:selected');
                        option.each(function (i, selected) {
                            selectedValues[i] = $(selected).text();
                
                        });
                     //   console.log(uuid + '.selected.' + name + ' - ' + JSON.stringify(selectedValues));
                        localStorage[uuid + '.selected.' + name] = JSON.stringify(selectedValues);
                    });
                });
            }

            $('.body-content').on('click', '#btn-test', (function (e) {
                console.log('klikk');
                var orderItems = JSON.parse(localStorage["orderItems"]);
                getSelectedValues(orderItems, 'selectProjeksjoner', 'projections');
                getSelectedValues(orderItems, 'selectFormater', 'formats');
                getSelectedValues(orderItems, 'selectOmraader', 'areas');
            }));


        });
    </script>
}
