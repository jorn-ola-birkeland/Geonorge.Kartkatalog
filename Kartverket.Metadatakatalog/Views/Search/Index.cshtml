@using Kartverket.Metadatakatalog.Models.ViewModels
@using Resources
@using Kartverket.Metadatakatalog.Helpers
@model SearchViewModel

@{
    if (!string.IsNullOrWhiteSpace(Model.Text))
    {
        ViewBag.Title = "Søk etter " + Model.Text;
    }
    else
    {
        ViewBag.Title = "Søk";
    }
}

<div id="feedback-alert" class="alert alert-success alert-dismissible" role="alert">
    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <span class="message"></span>
</div>

@helper DisplayFacet(SearchResultFacetViewModel facet)
{
    <div class="facet-sok-emne">
        <a data-toggle="collapse" class="facet-sok-tittel" href="#@facet.FacetField">
            <h3 style="font-size:18px">@UI.ResourceManager.GetString("Facet_" + facet.FacetField)</h3><span class="indicator"></span>
        </a>

        <div class="facet-sok-undertitler collapse in" id="@facet.FacetField">

            <ul class="nav nav-pills nav-stacked nav-pills-small">
                @foreach (var facetResult in facet.FacetResults)
                {
                    string cssClass = (Model.HasFacetFieldValue(facet.FacetField, facetResult.Name) ? "active" : "");

                    <li class="filter-options">
                        <a class="btn-link @cssClass" href="@Url.Action("Index", Model.LinkForFacetValue(facet.FacetField, facetResult.Name))">
                            @*Html.Raw(Model.HasFacetFieldValue(facet.FacetField, facetResult.Name) ? "<b style='font-weight: 800;'>" : "") @facetResult.LinkName() @Html.Raw(Model.HasFacetFieldValue(facet.FacetField, facetResult.Name) ? "<b>" : "") (@facetResult.Count)
                            *@
                            @facetResult.LinkName()
                            <span class="text-muted">(@facetResult.Count)</span>
                        </a>
                    </li>
                }
                @if (Model.HasFilterForFacetField(facet.FacetField))
                {
                    <li class="filter-options">
                        <button type="button" class="btn btn-default list-btn reset" onclick="location.href = '@Url.Action("Index", Model.CreateRoutesForFacetFieldsExcept(facet.FacetField))';">
                            <span class="glyphicon glyphicon-remove"> </span>
                            Vis alle
                        </button>
                    </li>
                }
            </ul>
        </div>
    </div>
}


@helper DisplayFacetCheckbox(SearchResultFacetViewModel facet)
{
    <div class="facet-sok-emne">
        <a data-toggle="collapse" class="facet-sok-tittel" href="#@facet.FacetField">
            <h3 style="font-size:18px">@UI.ResourceManager.GetString("Facet_" + facet.FacetField)</h3><span class="indicator"></span>
        </a>

        <div class="facet-sok-undertitler collapse in" id="@facet.FacetField">
            <ul class="nav nav-pills nav-stacked nav-pills-small">
                @{
                    string previousFacetLinkName = null;
                    double hierarchyLevel = 0;
                    foreach (var facetResult in facet.FacetResults)
                    {
                        string cssClass = (Model.HasFacetFieldValue(facet.FacetField, facetResult.Name) ? "active" : "");

                        string hideChildren = (Model.HasFacetFieldValue(facet.FacetField, facetResult.Name) ? "show-children" : "hide-children");
                        double relativeHierarchyLevel = 0;


                        if (previousFacetLinkName != null)
                        {
                            relativeHierarchyLevel = Model.GetRelativeHierarchyLevel(facetResult.LinkName(), previousFacetLinkName);
                            hierarchyLevel += relativeHierarchyLevel;
                            if (relativeHierarchyLevel > 0)
                            {
                                <text>
                                    <ul><li class="filter-options">
                                </text>
                            }
                            else if (relativeHierarchyLevel < 0)
                            {
                                @:</li></ul>
                            }
                            else
                            {
                                @:</li>
                            }
                        }
                        <text>
                            <li class="filter-options @hideChildren ">

                                <a class="btn-link @cssClass " href="@Url.Action("Index", Model.LinkForFacetValue(facet.FacetField, facetResult.Name))">
                                    @facetResult.AreaLinkName(Model.areaDictionary)<span class="text-muted">(@facetResult.Count)</span>
                                </a>

                        </text>

                        previousFacetLinkName = facetResult.LinkName().ToString();
                    }
                    for (int index = 0; index < hierarchyLevel; index++)
                    {
                        @:</li></ul>
                    }

                    if (Model.HasFilterForFacetField(facet.FacetField))
                    {
                        <li class="filter-options">
                            <button type="button" class="btn btn-default list-btn reset" onclick="location.href = '@Url.Action("Index", Model.CreateRoutesForFacetFieldsExcept(facet.FacetField))';">
                                <span class="glyphicon glyphicon-remove"> </span>
                                Vis alle
                            </button>
                        </li>
                    }
                }
                </ul>
            </div>
        </div>

}



@helper DisplayPagination()
{
    <div class="search-filter-wrapper">
        <ul class="nav nav-tabs col-xs-12 col-sm-12 col-md-12 col-lg-12" role="tablist">
            <li class="active"><span role="tab">Kartkatalogen viser @Model.ShowingFromAndTo() av @Model.NumFound treff.</span></li>

            <li class="pull-right">
                <label for="orderby">Sorter etter:</label>
                <select id="orderby">
                    @if (Model.orderby == 0)
                    {
                        <option value="@Url.Action("Index", Model.ParamsForOrderByScoreLink())" selected="selected">Relevans</option>
                    }
                    else
                    {
                        <option value="@Url.Action("Index", Model.ParamsForOrderByScoreLink())">Relevans</option>
                    }
                    @if (Model.orderby == 1)
                    {
                        <option value="@Url.Action("Index", Model.ParamsForOrderByTitleLink())" selected="selected">Navn</option>
                    }
                    else
                    {
                        <option value="@Url.Action("Index", Model.ParamsForOrderByTitleLink())">Navn</option>
                    }
                    @if (Model.orderby == 2)
                    {
                        <option value="@Url.Action("Index", Model.ParamsForOrderByOrganizationLink())" selected="selected">Organisasjon</option>
                    }
                    else
                    {
                        <option value="@Url.Action("Index", Model.ParamsForOrderByOrganizationLink())">Organisasjon</option>
                    }
                    @if (Model.orderby == 3)
                    {
                        <option value="@Url.Action("Index", Model.ParamsForOrderByMetadataUpdateLink())" selected="selected">Dato oppdatert (metadata)</option>
                    }
                    else
                    {
                        <option value="@Url.Action("Index", Model.ParamsForOrderByMetadataUpdateLink())">Dato oppdatert (metadata)</option>
                    }
                    @if (Model.orderby == 4)
                    {
                        <option value="@Url.Action("Index", Model.ParamsForOrderByResourceUpdateLink())" selected="selected">Dato oppdatert (ressurs)</option>
                    }
                    else
                    {
                        <option value="@Url.Action("Index", Model.ParamsForOrderByResourceUpdateLink())">Dato oppdatert (ressurs)</option>
                    }

                </select>

            </li>
        </ul>
        <div class="col-md-12 view-navigation">
            <div class="nav nav-tabs">
                <ul class="nav nav-pills pull-left">
                    <li><a onclick="listView()" id="button-listView" class="active"><span class="glyphicon glyphicon-th-list" aria-hidden="true"></span> Liste</a></li>
                    <li><a onclick="galleryView()" id="button-galleryView" class=""><span class="glyphicon glyphicon-th" aria-hidden="true"></span> Galleri</a></li>
                    <li><a onclick="tableView()" id="button-tableView" class=""><span class="glyphicon glyphicon-list" aria-hidden="true"></span> Tabell</a></li>
                </ul>


                <ul class="pagination pagination-sm pull-right btn-group">
                    @if (Model.IsFirstButtonActive())
                    {
                        <li><a aria-label="Første" title="Første" href="@Url.Action("Index", Model.ParamsForFirstLink())">&laquo;</a></li>
                    }

                    @if (Model.IsPreviousButtonActive())
                    {
                        <li><a href="@Url.Action("Index", Model.ParamsForPreviousLink())">&laquo; Forrige</a></li>
                    }

                    @for (int i = Model.startPage; i <= Model.endPage; i++)
                    {
                        if (Model.IsActivePage(i))
                        {
                            <li class="active"><a href="@Url.Action("Index", Model.ParamsForPageNumber(i))">@i</a></li>
                        }
                        else
                        {
                            <li><a href="@Url.Action("Index", Model.ParamsForPageNumber(i))">@i</a></li>
                        }
                    }

                    @if (Model.IsNextButtonActive())
                    {
                        <li><a href="@Url.Action("Index", Model.ParamsForNextLink())">Neste &raquo;</a></li>
                    }
                    @if (Model.IsLastButtonActive())
                    {
                        <li><a aria-label="Siste" title="Siste" href="@Url.Action("Index", Model.ParamsForLastLink())"> &raquo;</a></li>
                    }
                </ul>
            </div>

        </div>
    </div>
}

@helper DisplayPaginationBottom()
{
    <div class="search-filter-wrapper">
        <ul class="nav nav-tabs col-xs-12 col-sm-12 col-md-12 col-lg-12" role="tablist">
            <li class="active"><span role="tab">Kartkatalogen viser @Model.ShowingFromAndTo() av @Model.NumFound treff.</span></li>
        </ul>
        <div class="col-md-12 view-navigation">
            <div class="nav nav-tabs">

                <ul class="pagination pagination-sm pull-right">

                    @if (Model.IsFirstButtonActive())
                    {
                        <li><a aria-label="Første" title="Første" href="@Url.Action("Index", Model.ParamsForFirstLink())">&laquo;</a></li>
                    }

                    @if (Model.IsPreviousButtonActive())
                    {
                        <li><a href="@Url.Action("Index", Model.ParamsForPreviousLink())">&laquo; Forrige</a></li>
                    }

                    @for (int i = Model.startPage; i <= Model.endPage; i++)
                    {
                        if (Model.IsActivePage(i))
                        {
                            <li class="active"><a href="@Url.Action("Index", Model.ParamsForPageNumber(i))">@i</a></li>
                        }
                        else
                        {
                            <li><a href="@Url.Action("Index", Model.ParamsForPageNumber(i))">@i</a></li>
                        }
                    }

                    @if (Model.IsNextButtonActive())
                    {
                        <li><a href="@Url.Action("Index", Model.ParamsForNextLink())">Neste &raquo;</a></li>
                    }
                    @if (Model.IsLastButtonActive())
                    {
                        <li><a aria-label="Siste" title="Siste" href="@Url.Action("Index", Model.ParamsForLastLink())"> &raquo;</a></li>
                    }
                </ul>
            </div>

        </div>
    </div>
}



@section scripts {
    <script>
        function showAlert(message, colorClass) {
            $('#feedback-alert').attr('class', 'alert alert-dismissible alert-' + colorClass);
            $('#feedback-alert .message').html(message);
            $('#feedback-alert').show();
        }

        $('ul.facet').each(function () {
            var max = 15;
            if ($(this).find("li").length > max) {
                $(this)
                  .find('li:gt(' + max + ')')
                  .hide()
                  .end()
                  .append(
                    $('<li/>').append('<a href="">Vis flere</a>').click(function (event) {
                        event.preventDefault();
                        $(this).siblings(':hidden').show().end().remove();
                    })
                );
            }
        });
        $(document).ready(function () {
            $("#orderby").change(
                 function () {
                     location.href = $(this).val();
                 }
             );

            $('[data-toggle="tooltip"]').tooltip();
        });


        $(document).ready(function () {
            @if(Html.DownloadServiceEnabled())
            {
            <text>
            if (localStorage.getItem("orderItems") != null) {
                var storedOrderItems = JSON.parse(localStorage["orderItems"]);
                var orderitemCount = storedOrderItems.length;
                if (orderitemCount > 0) {
                    $('#orderitem-count').text(orderitemCount);
                    $('#orderitem-count-text').text(' datasett');
                } else {
                    $('#orderitem-count').text('');
                    $('#orderitem-count-text').text('Kurven er tom');
                }
            } else {
                $('#orderitem-count').text('');
                $('#orderitem-count-text').text('Kurven er tom');
            }
            </text>
            }
        });


        $(window).load(function () {
         @if(Html.DownloadServiceEnabled())
         {
         <text>
            if (Modernizr.localstorage) {

                console.log('window.localStorage is available!');
                var orderItems = [];
                $('.add-to-cart-btn').click(function () {
                    var added = false;
                    var itemuuid = $(this).attr('itemuuid');
                    var itemname = $(this).attr('itemname');
                    var itemurl = $(this).attr('itemurl');
                    var itemorglogo = $(this).attr('itemorglogo');
                    var itemdisturl = $(this).attr('itemdisturl');
                    if (localStorage.getItem('orderItems') != null) {
                        orderItems = (JSON.parse(localStorage.getItem('orderItems')));
                    }
                    $.map(orderItems, function (elementOfArray, indexInArray) {
                        if (elementOfArray == itemuuid) {
                            orderItems.push(itemuuid);
                            added = true;
                        }
                    });
                    if (!added) {
                        orderItems.push(itemuuid);
                        var metadata = { 'name': itemname, 'uuid': itemuuid, 'url': itemurl, 'organizationLogoUrl': itemorglogo, 'distributionUrl': itemdisturl };
                        localStorage["orderItems"] = JSON.stringify(orderItems);
                        localStorage[itemuuid + ".metadata"] = JSON.stringify(metadata);
                        showAlert(itemname + ' er lagt til i <a href="/Download">kurven</a>', 'success');

                        var orderItemCount = $('#orderitem-count').text();
                        console.log(orderItemCount);
                        if (orderItemCount == null || orderItemCount == '') {
                            orderItemCount = 0;
                            $('#orderitem-count-text').text(' datasett');
                        } else {
                            orderItemCount = parseInt($('#orderitem-count').text());
                            console.log('else: ' + orderItemCount);
                        }
                        orderItemCount += 1;
                        $('#orderitem-count').text(orderItemCount);


                    } else {
                        showAlert(itemname + ' er allerede lagt til i <a href="/Download">kurven</a>', 'warning');
                    }
                });
            } else {
                console.log('no native support for HTML5 storage :(');
            }

        </text>
        }
                
        });

    </script>
}


<article class="row">
    @Html.Partial("_SearchBarPartial", Model)
</article>

<div class="row">
    <div class="col-sm-12 col-md-3 pull-left">
        <div class="hidden-sm hidden-xs">
            <div class="panel panel-info" id="filterInner">
                <div class="panel-heading">
                    <h2 class="panel-title">Søkefilter<span class="glyphicon glyphicon-filter pull-right"></span></h2>
                </div>
                <div class="panel-body">
                    @DisplayFacet(Model.Result.Facets.First(f => f.FacetField == "theme"))
                    @DisplayFacet(Model.Result.Facets.First(f => f.FacetField == "type"))
                    @DisplayFacet(Model.Result.Facets.First(f => f.FacetField == "nationalinitiative"))
                    @DisplayFacet(Model.Result.Facets.First(f => f.FacetField == "placegroups"))
                    @DisplayFacetCheckbox(Model.Result.Facets.First(f => f.FacetField == "area"))
                    @DisplayFacet(Model.Result.Facets.First(f => f.FacetField == "DistributionProtocols"))
                    @DisplayFacet(Model.Result.Facets.First(f => f.FacetField == "organization"))

                    @*@DisplayFacet(Model.Result.Facets.First(f => f.FacetField == "license"))@*
                        @*DisplayFacet(Model.Result.Facets.First(f => f.FacetField == "keyword"))*@
                </div>
            </div>
        </div>
    </div>
    <div class="col-sm-12 col-md-9 pull-right">
        @if (Model.Result != null)
        {
            @DisplayPagination()

            <div class="search-results">
                @foreach (var item in Model.Result.Items)
                {
                    <div class="row result-row metadata">
                        <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                            <div class="hidden-xs col-sm-1 col-md-1 col-lg-1 top-padding hide-overflow col-logo">


                                @if (!string.IsNullOrWhiteSpace(item.OrganizationLogoUrl))
                                {
                                    System.Uri organizationLogoUrl = new Uri(item.OrganizationLogoUrl);
                                    string relativeOrganizationLogoUrl = "//" + organizationLogoUrl.Host + organizationLogoUrl.PathAndQuery;
                                    <a href="@Url.Action("Organization", "Metadata", new { OrganizationSeoName = @item.OrganizationSeoName() })">
                                        <img src="@relativeOrganizationLogoUrl" class="img-responsive center-block" alt="Logo @item.Organization" title="Vis alle tjenester og datasett fra @item.Organization" />
                                    </a>


                                }
                            </div>
                            <div class="col-no-padding-xs col-xs-12 col-sm-5 col-md-5 col-lg-5 col-title">
                                <a href="@Url.Action("Index", "Metadata", item.ShowMetadataLinkRouteValueDictionary())">
                                    <h4 class="role-button" role="button">@item.Title</h4>
                                </a>


                                <a href="@Url.Action("Organization", "Metadata", new { OrganizationSeoName = @item.OrganizationSeoName() })" title="Vis alle tjenester og datasett fra @item.Organization">
                                    @if (item.Organization != null)
                                    {
                                        <h5>@item.Organization</h5>
                                    }

                                </a>

                                <p>
                                    @if (item.Abstract != null) { 
                                        if (item.Abstract.Length > 650)
                                        {
                                            @item.Abstract.Substring(0, 654)<text>...</text>
                                        }
                                        else
                                        {
                                            @item.Abstract
                                        }
                                    }

                                </p>
                                <p>
                                    Tilgjengelig som:
                                    <span title="Tilgjengelig som @item.GetInnholdstype()" class="label @item.GetInnholdstypeCSS()">@item.GetInnholdstype()</span>
                                </p>


                            </div>
                            <div class="col-no-padding-xs col-xs-6 col-sm-3 col-md-3 col-lg-3 col-actions">
                                @if (item.ShowDownloadService())
                                {
                                    string relativeOrganizationLogoUrl = "";
                                    string relativeDowloadUrl = "";

                                    if (!string.IsNullOrWhiteSpace(item.OrganizationLogoUrl))
                                    {
                                        System.Uri organizationLogoUrl = new Uri(item.OrganizationLogoUrl);
                                        relativeOrganizationLogoUrl = "//" + organizationLogoUrl.Host + organizationLogoUrl.PathAndQuery;
                                    }

                                    if (!string.IsNullOrWhiteSpace(item.DownloadUrl))
                                    {
                                        System.Uri downloadUrl = new Uri(item.DownloadUrl);
                                        relativeDowloadUrl = "//" + downloadUrl.Host + downloadUrl.PathAndQuery;
                                    }

                                    <a data-toggle='tooltip'
                                       data-placement='bottom'
                                       title='Legg til @item.Title i kurv'
                                       class='btn btn-xs btn-bunnmarg btn-default add-to-cart-btn'
                                       itemname='@item.Title'
                                       itemuuid='@item.Uuid'
                                       itemurl='/metadata/uuid/@item.Uuid'
                                       itemorglogo='@relativeOrganizationLogoUrl'
                                       itemdisturl='@relativeDowloadUrl'>
                                        <span class="glyphicon glyphicon-shopping-cart"></span>Legg i kurv
                                    </a>
                                }
                                else if (item.ShowDownloadLink())
                                {
                                    <a href="@item.DownloadUrl" title="Last ned datasett for @item.Title" class="btn btn-xs btn-bunnmarg btn-default" target="_blank">
                                        <span class="glyphicon glyphicon-download-alt"></span>last ned
                                    </a>
                                }
                                else
                                {
                                    <a href="@item.DownloadUrl" title="Last ned datasett for @item.Title" class="btn btn-xs btn-bunnmarg btn-default disabled" target="_blank">
                                        <span class="glyphicon glyphicon-download-alt"></span>last ned
                                    </a>
                                }

                                <br />
                                @if (item.ShowWebsiteLink())
                                {
                                    <a href="@item.DownloadUrl" class="btn btn-xs btn-bunnmarg btn-default" title="Besøk nettsiden til @item.Title" target="_blank">
                                        <span class="glyphicon glyphicon-globe"></span>besøk nettside
                                    </a>
                                }
                                else
                                {
                                    <a href="@item.DownloadUrl" class="btn btn-xs btn-bunnmarg btn-default disabled" title="Besøk nettsiden til @item.Title" target="_blank">
                                        <span class="glyphicon glyphicon-globe"></span>besøk nettside
                                    </a>
                                }
                                <br />


                                @if (item.ShowMapLink())
                                {
                                    <a href="@Html.NorgeskartUrl()@item.DownloadUrl/" title="Vis @item.Title i kart" class="btn btn-xs btn-bunnmarg btn-default" target="_blank">
                                        <span class="glyphicon glyphicon-map-marker"></span>vis i kart
                                    </a>
                                }
                                else if (item.ShowServiceMapLink())
                                {
                                    <a href="@Html.NorgeskartUrl()@item.ServiceUrl/" title="Vis @item.Title i kart" class="btn btn-xs btn-bunnmarg btn-default" target="_blank">
                                        <span class="glyphicon glyphicon-map-marker"></span>vis i kart
                                    </a>
                                }
                                else
                                {
                                    <a href="@Html.NorgeskartUrl()@item.DownloadUrl/" title="Vis @item.Title i kart" class="btn btn-xs btn-bunnmarg btn-default disabled" target="_blank">
                                        <span class="glyphicon glyphicon-map-marker"></span>vis i kart
                                    </a>
                                }



                                @if (!string.IsNullOrWhiteSpace(item.ProductSheetUrl))
                                {
                                    <a href="@item.ProductSheetUrl" class="btn btn-xs btn-bunnmarg btn-default" title="Produktark for @item.Title" target="_blank">
                                        <span class="glyphicon glyphicon-info-sign"></span>vis produktark
                                    </a>
                                }
                                else
                                {
                                    <a class="btn btn-xs btn-bunnmarg btn-default disabled" title="Produktark for @item.Title">
                                        <span class="glyphicon glyphicon-info-sign"></span>vis produktark
                                    </a>
                                }

                                @if (!string.IsNullOrWhiteSpace(item.ProductSpecificationUrl))
                                {
                                    <a href="@item.ProductSpecificationUrl" class="btn btn-xs btn-bunnmarg btn-default" title="Produktspesifikasjon for @item.Title" target="_blank">
                                        <span class="glyphicon glyphicon-list-alt"></span>vis produktspesifikasjon
                                    </a>
                                }
                                else
                                {
                                    <a class="btn btn-xs btn-bunnmarg btn-default disabled" title="Produktspesifikasjon for @item.Title">
                                        <span class="glyphicon glyphicon-list-alt"></span>vis produktspesifikasjon
                                    </a>
                                }

                                @if (!string.IsNullOrWhiteSpace(item.LegendDescriptionUrl))
                                {
                                    <a href="@item.LegendDescriptionUrl" class="btn btn-xs btn-bunnmarg btn-default" title="Tegneregler for @item.Title" target="_blank">
                                        <span class="glyphicon glyphicon-picture"></span>vis tegneregler
                                    </a>
                                }
                                else
                                {
                                    <a class="btn btn-xs btn-bunnmarg btn-default disabled" title="Tegneregler for @item.Title">
                                        <span class="glyphicon glyphicon-picture"></span>vis tegneregler
                                    </a>
                                }
                                @if (item.IsOpendata)
                                {
                                    <img title="Åpne data" src="~/Content/img/unlock.png" class="bottom opendata" alt="Åpne data" />
                                }

                                @*else
                                    {
                                        <img src="~/Content/img/lock.png" class="opendata">
                                    }
                                *@

                            </div>

                            <div class="col-xs-6 col-sm-3 col-md-3 col-lg-3 pull-right col-img">

                                @if (!string.IsNullOrWhiteSpace(item.ThumbnailUrl))
                                {
                                    System.Uri thumbnailUrl = new Uri(item.ThumbnailUrl);
                                    string relativeThunbnailUrl = "//" + thumbnailUrl.Host + thumbnailUrl.PathAndQuery;
                                    <a href="@Url.Action("Index", "Metadata", item.ShowMetadataLinkRouteValueDictionary())">
                                        <img alt="@item.Title illustrasjonsbilde" src="@relativeThunbnailUrl" class="img-responsive pull-right">
                                    </a>
                                }

                            </div>
                        </div>
                    </div>
                    <hr />
                }
            </div>

            @DisplayPaginationBottom()

        }
    </div>
</div>
