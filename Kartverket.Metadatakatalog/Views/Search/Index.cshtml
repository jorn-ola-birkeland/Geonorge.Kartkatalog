@using Kartverket.Metadatakatalog.Models.ViewModels
@using Resources
@model SearchViewModel

@{
    if (!string.IsNullOrWhiteSpace(Model.Text))
    {
        ViewBag.Title = "Søk etter " + Model.Text;
    }
    else
    {
        ViewBag.Title = "Søk";
    }
}



@helper DisplayFacet(SearchResultFacetViewModel facet)
{
    <h4>@UI.ResourceManager.GetString("Facet_" + facet.FacetField)</h4>


    
        foreach (var facetResult in facet.FacetResults)
        {
            <div class="filter-options"><a class="btn-link" href="@Url.Action("Index", Model.LinkForFacetValue(facet.FacetField, facetResult.Name))">@facetResult.LinkName() (@facetResult.Count)</a></div>
        }
        if (Model.HasFilterForFacetField(facet.FacetField))
        {
            <div class="filter-options"><a class="btn-link" href="@Url.Action("Index", Model.CreateRoutesForFacetFieldsExcept(facet.FacetField))">Vis alle</a></div>
        }
 
}

@helper DisplayPagination()
{
    <ul class="nav nav-tabs col-xs-12 col-sm-12 col-md-12 col-lg-12" role="tablist">
        <li class="active"><span  role="tab" >Kartkatalogen viser @Model.ShowingFromAndTo() av @Model.NumFound treff.</span></li>
        <li class="btn-group pull-right">
            
                @if (Model.IsPreviousButtonActive())
                {
                    <span><a href="@Url.Action("Index", Model.ParamsForPreviousLink())">&laquo; Forrige</a></span>
                }
                @if (Model.IsNextButtonActive())
                {
                    <span><a href="@Url.Action("Index", Model.ParamsForNextLink())">Neste &raquo;</a></span>
                }
           
        </li>
    </ul>
    
}

@section scripts {
    <script>
        $('ul.facet').each(function () {
            var max = 15;
            if ($(this).find("li").length > max) {
                $(this)
                  .find('li:gt(' + max + ')')
                  .hide()
                  .end()
                  .append(
                    $('<li/>').append('<a href="">Vis flere</a>').click(function (event) {
                        event.preventDefault();
                        $(this).siblings(':hidden').show().end().remove();
                    })
                );
            }
        });
    </script>

    <script>
        //$(function () {
        //    function log(message) {
        //        $("<div>").text(message).prependTo("#log");
        //        $("#log").scrollTop(0);
        //    }

        //    $("#txtSearch").autocomplete({
        //        source: function (request, response) {
        //            $.ajax({
        //                url: "/api/search/",
        //                dataType: "jsonp",
        //                data: {
        //                    text: request.term
        //                },
        //                success: function (data) {
        //                    response(data);
        //                }
        //            });
        //        },
        //        minLength: 3,
        //        select: function (event, ui) {
        //            log(ui.item ?
        //              "Selected: " + ui.item.label :
        //              "Nothing selected, input was " + this.value);
        //        },
        //        open: function () {
        //            $(this).removeClass("ui-corner-all").addClass("ui-corner-top");
        //        },
        //        close: function () {
        //            $(this).removeClass("ui-corner-top").addClass("ui-corner-all");
        //        }
        //    });
        //});


    //$('#txtSearch').typeahead({
    //    minLength: 2,
    //    dynamic: true,
    //    delay: 500,
    //    backdrop: false,
    //    selector: {
    //        filter: "input-group-btn",
    //        filterButton: "btn btn-default",
    //        dropdown: "autocomplete",
    //        hint: "form-control"
    //    },
    //    display: "metadata",
    //    template: '<div class="row"><span>{{Title}}</span></div>',
    //    source: {
    //    metadata: {
    //                url: [{
    //                    type: "GET",
    //                    url: "/api/search/",
    //                    data: {
    //                        text: "{{query}}"
    //                    }
    //                }, "Results"],
    //                display: "Title",
    //                template: '<div class="row"><span>{{Title}}</span></div>'
    //    }
    //    },
    //callback: {
    //        onClick: function (node, a, obj, e) {
    //            document.getElementById("searchForm").submit();
    //            //alert(JSON.stringify(obj));

    //        },
    //        onResult: function (node, query, obj, objCount) {

    //            var text = "";
                
    //            for (i = 0; i < objCount; i++) {
    //                text ='<a href="#">' + obj[i].Title + '</a>';
    //                $('#autocomplete').append(text);
    //            }
                

    //        }
    //},
    //debug: true
    //});
    </script>
    }
<article class="row">
    @Html.Partial("_SearchBarPartial", Model)
</article>

    <div class="row">
        <div class="col-sm-12 col-md-3 pull-left">
            <div class="hidden-sm hidden-xs">
                <div class="panel panel-info" id="filterInner">
                    <div class="panel-heading">
                        <h2 class="panel-title">Søkefilter<span class="glyphicon glyphicon-filter pull-right"></span></h2>
                    </div>
                    <div class="panel-body">
                        @DisplayFacet(Model.Result.Facets.First(f => f.FacetField == "theme"))
                        @DisplayFacet(Model.Result.Facets.First(f => f.FacetField == "type"))
                        @DisplayFacet(Model.Result.Facets.First(f => f.FacetField == "organization"))
                        @DisplayFacet(Model.Result.Facets.First(f => f.FacetField == "nationalinitiative"))
                        @DisplayFacet(Model.Result.Facets.First(f => f.FacetField == "place"))
                        @*@DisplayFacet(Model.Result.Facets.First(f => f.FacetField == "license"))*@
                        @*DisplayFacet(Model.Result.Facets.First(f => f.FacetField == "keyword"))*@
                    </div>
                </div>
            </div>
         </div>
        <div class="col-sm-12 col-md-9 pull-right">
            @if (Model.Result != null)
            {
                @DisplayPagination()

                <div class="search-results">
                    @foreach (var item in Model.Result.Items)
                    {
                        <div class="row result-row">
                            <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12">
                                <div class="col-md-2">

                                   


                                    @if (!string.IsNullOrWhiteSpace(item.OrganizationLogoUrl))
                                    {
                                        <a href="@Url.Action("Organization", "Metadata", new { OrganizationSeoName = @item.OrganizationSeoName() })">
                                            <img src="@item.OrganizationLogoUrl" width="100" alt="Logo @item.Organization" title="Vis alle tjenester og datasett fra @item.Organization" style="margin: 5px" />
                                        </a>
                                    }
                                </div>
                                <div class="col-md-10">
                                    <h4><a href="@Url.Action("Index", "Metadata", item.ShowMetadataLinkRouteValueDictionary())">@item.Title</a></h4>
                                    @if (!string.IsNullOrWhiteSpace(item.ThumbnailUrl))
                                    {
                                        <a href="@Url.Action("Index", "Metadata", item.ShowMetadataLinkRouteValueDictionary())">
                                            <img src="@item.ThumbnailUrl" width="150" class="pull-right" style="margin: 10px;">
                                        </a>
                                    }

                                    <p><a href="@Url.Action("Organization", "Metadata", new { OrganizationSeoName = @item.OrganizationSeoName() })" title="Vis alle tjenester og datasett fra @item.Organization">@item.Organization</a></p>

                                    <p>@item.Abstract</p>
                                    <div class="label @item.GetInnholdstypeCSS()">@item.GetInnholdstype()</div>
                                </div>
                            </div>
                        </div>
                        <hr />
                    }
                </div>

                @DisplayPagination()

            }
        </div>
    </div>




