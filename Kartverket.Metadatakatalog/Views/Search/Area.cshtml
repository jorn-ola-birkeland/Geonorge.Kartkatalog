@using Kartverket.Metadatakatalog.Models.ViewModels
@using Kartverket.Metadatakatalog.Helpers
@model SearchByAreaViewModel
@{
    ViewBag.Title = Resources.UI.MetadataInMunicipality;

}
@section breadcrumb {
    <li class="active">@ViewBag.Title</li>
}

<div id="feedback-alert" class="alert alert-success alert-dismissible" role="alert">
    <button type="button" class="close" data-dismiss="alert" aria-label="Close"><span aria-hidden="true">&times;</span></button>
    <span class="message"></span>
</div>

<section class="heading">
    <div class="row">
        <div class="col-sm-12">
            <h1 class="small-h1">
                @ViewBag.Title
            </h1>
        </div>
        <div class="col-sm-12">
            <span class="separator-lg"></span>
        </div>
        <div class="col-sm-9">
            <p>@Resources.UI.MunicipalitySelectInfo</p>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-3">
            <form action=@Url.Action("Area", "Search", new { AreaCode = ""}) method="get" class="custom-select">
                <select class="form-control" name="AreaCode" onchange="this.form.submit()">
                    <option Selected disabled>@Resources.UI.MunicipalitySelect</option>
                    <optgroup label="Fylker">
                        @foreach (var countie in Model.Counties)
                        {
                            if (Model.AreaCode == countie.Code)
                            {
                                <option selected value="@countie.Code">@countie.Name</option>
                            }
                            else
                            {
                                <option value="@countie.Code">@countie.Name</option>
                            }
                        }
                    </optgroup>
                    <optgroup label="Kommuner">
                        @foreach (var municipal in Model.Municipalities)
                        {
                            if (Model.AreaCode == municipal.Code)
                            {
                                <option selected value="@municipal.Code">@municipal.Name</option>
                            }
                            else
                            {
                                <option value="@municipal.Code">@municipal.Name</option>
                            }
                        }
                    </optgroup>
                </select>
            </form>
        </div>
    </div>
</section>

<script type="text/x-template" id="searchResultTemplate">
    <div>
        <div v-if="$root.viewType == 'tableView' && items.length" class="row resultItemRowTableHeader">
            <div class="col-sm-4" is="header-title"></div>
            <div class="col-sm-2" is="header-type"></div>
            <div class="col-sm-3" is="header-organization"></div>
            <div class="col-sm-1" is="header-open-data"></div>
            <div class="col-sm-1" is="header-map"></div>
            <div class="col-sm-1" is="header-add-to-cart"></div>
        </div>
        <div v-if="$root.viewType == 'tableView'" class="menu-separator search-results-table-heading"></div>
        <div v-for="item in items" is="resultItem"
             v-bind:result-item="item"
             v-bind:selected-fields="[
                 {name: 'title', size: '4'},
                 {name: 'distributionType', size: '2'},
                 {name: 'owner', size: '3'},
                 {name: 'openData', size: '1'}
                 ]"
             v-bind:selected-buttons="[
                 'showInMapButton',
                 'addToCartButton'
                 ]">
        </div>
        <div class="clearfix"></div>
    </div>
</script>

@{
    string url = HttpContext.Current.Request.Url.AbsoluteUri; url = url.Replace("hva-finnes-i-kommunen-eller-fylket", "api/search");
    Uri uri = new Uri(url);
    string path = String.Format("{0}{1}{2}{3}", uri.Scheme,
    Uri.SchemeDelimiter, uri.Authority, uri.AbsolutePath);
    var qs = HttpUtility.ParseQueryString("");

    for (int f = 0; f < Model.FacetParameters.Count; f++)
    {
        var facet = Model.FacetParameters[f];

        qs.Add("facets[" + f + "]name", facet.Name);
        qs.Add("facets[" + f + "]value", facet.Value);
    }
    qs.Set("Offset", "1"); qs.Set("limit", Model.NumFound.ToString()); qs.Add("mediatype", "csv");
    string query = qs.ToString(); string urlCSV = path + "?" + query;
}

@Html.Partial("_ThemeGroup", Model)
@Html.Partial("_FacetFilter", Model)



<div id="vue-container" class="row">

    <div id="searchResultTable" class="col-md-9">
        <div is="facet-filter" filter-type="tabs" class="facet-filter"></div>
        @if (Model.Result != null)
    {
        <div is="theme-group"></div>
        <div class="margin-top-10">
            @Html.Partial("_PaginationForArea", Model)
        </div>
}
    </div>

    <div class="col-sm-12 col-md-3 pull-left hidden-sm hidden-xs">
        <aside>
            <h3 class="">@Resources.UI.FilterSearch:</h3>
            <span class="separator-small"></span>
            <div is="facet-filter" filter-type="sidebar" class="facet-filter"></div>
            <h3 class="" style="padding-top: 40px;">@Resources.UI.Pages</h3>
            <span class="separator-small"></span>
            @Html.Partial("_FilterPages")

            <div class="save-as-menu">
                <h3 style="padding-top: 40px;">@Resources.UI.SaveAs:</h3>
                <span class="separator-small"></span>

                <div class="no-padding-bottom save-as-dropdown">
                    <div class="custom-select">
                        <select onchange="additionalView(this.value)" class="form-control">
                            <option value="csvUrl" selected="selected">CSV</option>
                        </select>
                    </div>
                </div>
                <div id="saveButtons" class="no-padding-bottom save-as-buttons">
                    <a class="btn" id="csvUrl" href="@urlCSV">@Resources.UI.Save</a>
                </div>
            </div>
        </aside>
    </div>
</div>

@section scripts {
    @{var javaScriptSerializer = new System.Web.Script.Serialization.JavaScriptSerializer(); }

    <script>

        // Setter url for søkeresultat
        setMainSearchUrl('hva-finnes-i-kommunen-eller-fylket');
        setMainSearchApiUrl('search?facets[0]name=area&facets[0]value=@Model.AreaCode');

    </script>

    <script>
        function showAlert(message, colorClass) {
            $('#feedback-alert').attr('class', 'alert alert-dismissible alert-' + colorClass);
            $('#feedback-alert .message').html(message);
            $('#feedback-alert').show();
        }

        $(document).ready(function() {
            $("#orderby").change(
                function() {
                    location.href = $(this).val();
                }
            );
        });

        $(document).ready(function() {
            @if (Html.DownloadServiceEnabled())
            {
                <text>
            if (localStorage.getItem("orderItems") != null) {
                var storedOrderItems = JSON.parse(localStorage["orderItems"]);
                var orderitemCount = storedOrderItems.length;
                if (orderitemCount > 0) {
                    $('#orderitem-count').text(orderitemCount);
                    $('#orderitem-count-text').text(' datasett');
                    updateAllCartButtons(storedOrderItems);
                } else {
                    $('#orderitem-count').text('');
                    $('#orderitem-count-text').text('Kurven er tom');
                }
            } else {
                $('#orderitem-count').text('');
                $('#orderitem-count-text').text('Kurven er tom');
            }
            </text>
            }
        });

    </script>
}


<script>
    var Area = new Vue({
        el: "#vue-container",
        components: {
            ThemeGroup: ThemeGroup,
            FacetFilter: FacetFilter
        },
        data: {
            viewType: 'tableView'
        }
    });
</script>