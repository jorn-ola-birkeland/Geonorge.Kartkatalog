@using Kartverket.Metadatakatalog.Helpers


@{var javaScriptSerializer = new System.Web.Script.Serialization.JavaScriptSerializer(); }

@* Template for Underliggende distribusjoner *@
@Html.Partial("_UnderlayingDistributions")

<script>
    //Component
    var ResultItemComponent = {
        template: "#resultItemRow",
        props: ["resultItem"],
        data: function () {
            var data = {
                expanded: false,
                underlayingDistributions: [],
                underlayingDistributionsRequested: false,
                backgroundColor: "#fff",
                addedToCart: false,
                itemType: this.resultItem.type,
                hierarchyLevel: this.$parent.hierarchyLevel !== undefined ? this.$parent.hierarchyLevel : 0
            };
            return data;
        },
        components: {
            distributionRows: distributionRows
        },
        mounted: function () {
            this.getCartButtonStatus();
            var addToCartId = getParameterByName('addtocart_event_id');
            if (addToCartId && this.resultItem.Uuid == addToCartId) {
                this.addToCart();
                removeParameterByNameFromUrl('addtocart_event_id');
            }
        },
        computed: {
            openData: function () {
                var openData = {
                    className: "",
                    title: ""
                };
                if (this.resultItem.IsRestricted) {
                    openData.className = "custom-icon custom-icon-hengelaas-closed-yellow";
                    openData.title = "Tilgangsbegrensede data";
                } else if (this.resultItem.IsOffline) {
                    openData.className = "custom-icon custom-icon-hengelaas-closed-red";
                    openData.title = "Skjermede data";
                } else if (this.resultItem.IsOpendata) {
                    openData.className = "custom-icon custom-icon-hengelaas-open-green";
                    openData.title = "Åpne data";
                }
                return openData;
            },
            mapLink: function () {
                var mapLink = {
                    mapLinkButtonId: "mapmacrolink-button-" + this.resultItem.Uuid,
                    mapMacroButtonId: "mapmacro-button-" + this.resultItem.Uuid,
                    mapLinkId: "mapmacrolink-" + this.resultItem.Uuid,
                    mapMacroId: "mapmacro-" + this.resultItem.Uuid,
                    onClick: "ga('send', 'event', 'Nedlasting', 'viskart')",
                    mapLinkClassButton: "btn btn-default",
                    mapLinkClassLink: "",
                    iconPermission: "custom-icon",
                    mapTitleTag: this.resultItem.MapTitleTag,
                    url: ""
                };

                if (this.resultItem.ShowMapLink) {
                    mapLink.iconPermission += " custom-icon-kartmarkoer";
                    mapLink.url = this.resultItem.MapUrl;

                } else if (this.resultItem.ShowServiceMapLink) {
                    mapLink.iconPermission += this.restrictedServiceClass();
                    mapLink.url = this.resultItem.ServiceUrl;
                } else {
                    mapLink.mapLinkClassLink = "disabled";
                    mapLink.mapLinkClassButton += " disabled";
                    mapLink.iconPermission += " custom-icon-kartmarkoer";
                    mapLink.mapLinkButtonId = "";
                    mapLink.mapMacroButtonId = "";
                    mapLink.mapLinkId = "";
                    mapLink.mapMacroId = "";
                    mapLink.onClick = "";
                    mapLink.mapTitleTag = "Vis " + this.resultItem.Title + " i kart";
                }
                return mapLink;
            },
            itemAddToCart: function () {
                var itemAddToCart = {
                    buttonClass: "btn btn-default add-to-cart-btn",
                };

                if (this.resultItem.IsRestricted || this.resultItem.IsOffline) {
                    itemAddToCart.buttonClass += " add-to-cart-btn prevent-action";
                }
                if (this.resultItem.IsRestricted) {
                    @{
                        string baseUrl = Request.Url.AbsoluteUri;
                        baseUrl = baseUrl.Replace("http://", "https://");
                        if (baseUrl.Contains("addtocart_event_id"))
                        {
                            baseUrl = HtmlHelperExtensions.RemoveQueryStringByKey(baseUrl, "addtocart_event_id");
                        }
                    }
                    var baseUrl = '@baseUrl';
                    var addToCartEventParamater = "?addtocart_event_id=" + this.resultItem.Uuid;

                    if (baseUrl.indexOf("?") !== -1) {
                        addToCartEventParamater = "&addtocart_event_id=" + this.resultItem.Uuid;
                    }

                    var downloadSignInUrl = '@Html.DownloadUrl()'
                   + 'AuthServices/SignIn?ReturnUrl='
                   + encodeURIComponent(baseUrl)
                   + encodeURIComponent(addToCartEventParamater);

                    var addToCartUrl = '@Html.KartkatalogenUrl()'
                         + 'AuthServices/SignIn?ReturnUrl='
                         + encodeURIComponent(downloadSignInUrl);
                    itemAddToCart.href = addToCartUrl;
                }
                return itemAddToCart;
            },
            organizationUrl: function () {
                url = "/etatvis-oversikt/" + this.resultItem.OrganizationSeoName;
                return url;
            },
            readMoreUrl: function () {
                var organization = this.resultItem.OrganizationSeoName;
                var title = this.resultItem.TitleSeo;
                var uuid = this.resultItem.Uuid;
                var url = "/metadata/" + organization + "/" + title + "/" + uuid;
                return url;
            },
            description: function () {
                var description;
                if (this.resultItem.Abstract.length > 250) {
                    description = this.resultItem.Abstract.substring(0, 251) + " ...";
                } else {
                    description = this.resultItem.Abstract;
                }
                return description;
            },
            thumbnailSrc: function () {
                var src = "/thumbnail?uuid=" + this.resultItem.Uuid + "&type=small";
                return src;
            },
            copyClass: function () {
                copyClass = {
                    btn: "btn btn-copy",
                    icon: "btn btn-copy input-group-addon"
                };
                if (this.resultItem.GetCapabilitiesUrl.length == 0) {
                    copyClass.btn = "btn disabled";
                    copyClass.icon = "btn input-group-addon disabled";
                }
                return copyClass;
            }
        },
        methods: {
            downloadUrl: function (url) {
                url += this.resultItem.DownloadUrl;
                return url;
            },
            showMapLink: function () {
                if (this.resultItem.DistributionProtocol &&
                    (this.resultItem.DistributionProtocol.indexOf("OGC:WMS") > -1 ||
                        this.resultItem.DistributionProtocol.indexOf("OGC:WFS") > -1 ||
                        this.resultItem.DistributionProtocol.indexOf("OGC:WCS") > -1) &&
                    (this.resultItem.Type == "service" || this.resultItem.Type == "servicelayer") &&
                    this.resultItem.MapUrl)
                    return true;
                else return false;
            },
            showServiceMapLink: function () {
                if (this.resultItem.ServiceUrl) return true;
                else return false;
            },
            isRestrictedService: function () {
                if (this.resultItem.ServiceDistributionAccessConstraint == "Beskyttet" ||
                    this.resultItem.ServiceDistributionAccessConstraint == "restricted" ||
                    this.resultItem.ServiceDistributionAccessConstraint == "norway digital restricted") return true;
                else {
                    return false;
                }
            },
            restrictedServiceClass: function () {
                var iconPermissionClass;
                if (this.isRestrictedService()) {
                    iconPermissionClass = " custom-icon-kartmarkoer-needs-permission";
                } else {
                    iconPermissionClass = " custom-icon-kartmarkoer";
                }
                return iconPermissionClass;
            },
            getUnderlyingDistributions: function () {
                this.expanded = !this.expanded;
                if (!this.underlayingDistributionsRequested) {
                    showLoadingAnimation("Henter underliggende distribusjoner");
                    $.ajax({
                        type: "GET",
                        url: "/api/distributions/" + uuid,
                        success: function (response) {
                            ResultItemComponent.distributionlist = ResultItemComponent.convertDistributionList(response);
                        }
                    });

                    $.ajax({
                        type: "GET",
                        url: "/api/distributions/" + this.resultItem.Uuid,
                        success: function (response) {
                            ResultItemComponent.underlayingDistributions = response;
                            ResultItemComponent.underlayingDistributions.forEach(function (dis, index) {
                                dis.Type = ResultItemComponent.translateDistributionType(dis.DistributionProtocol, index);
                            });
                            hideLoadingAnimation();
                        }
                    });
                    this.relatedDataList = this.convertRelatedDataList();
                }
                if (this.$root.viewType == "galleryView") {
                    this.backgroundColor = "#fff";
                } else {
                    if (this.expanded) {
                        this.backgroundColor = "#f4f4f4";
                    } else {
                        this.backgroundColor = "#fff";
                    }
                }
                this.underlayingDistributionsRequested = true;
            },
            addToCart: function () {
                var orderItems = [];
                var added = false;
                var item = {
                    name: this.resultItem.Title,
                    uuid: this.resultItem.Uuid,
                    url: "/metadata/uuid/" + this.resultItem.Uuid,
                    organizationLogoUrl: this.resultItem.OrganizationLogoUrl,
                    distributionUrl: this.resultItem.DownloadUrl,
                    theme: this.resultItem.Theme,
                    organizationName: this.resultItem.Organization
                }

                if (localStorage.getItem('orderItems') != null) {
                    orderItems = (JSON.parse(localStorage.getItem('orderItems')));
                }
                $.map(orderItems,
                    function (elementOfArray, indexInArray) {
                        if (elementOfArray == item.uuid) {
                            added = true;
                        }
                    });
                if (!added) {
                    orderItems.push(item.uuid);
                    localStorage["orderItems"] = JSON.stringify(orderItems);
                    localStorage[item.uuid + ".metadata"] = JSON.stringify(item);
                    showAlert(item.name + ' er lagt til i <a href="/nedlasting">kurven</a>', 'success');

                    var orderItemCount = $('#orderitem-count').text();
                    if (orderItemCount == null || orderItemCount == '') {
                        orderItemCount = 0;
                        $('#orderitem-count-text').text(' datasett');
                    } else {
                        orderItemCount = parseInt($('#orderitem-count').text());
                    }
                    orderItemCount += 1;
                    $('#orderitem-count').text(orderItemCount);
                    updateShoppingCart();
                    this.addedToCart = true;
                } else {
                    var index = orderItems.indexOf(item.uuid);
                    if (index > -1) {
                        orderItems.splice(index, 1);
                    }
                    localStorage.removeItem(item.uuid + ".metadata");
                    localStorage["orderItems"] = JSON.stringify(orderItems);

                    updateShoppingCart();

                    showAlert(item.name + ' er fjernet fra <a href="/nedlasting">kurven</a>', 'warning');
                    this.addedToCart = false;
                }
            },
            type: function (type) {
                var className = "label ";
                if (type == "dataset" || type == "Datasett") className += "label-datasett";
                else if (type == "software" || type == "Applikasjon") className += "label-applikasjon";
                else if (type == "service" || type == "Tjeneste") className += "label-tjeneste";
                else if (type == "servicelayer" || type == "Tjenestelag") className += "label-tjenestelag";
                else if (type == "series" || type == "Datasettserie") className += "label-datasettserie";
                else if (type == "dimensionGroup" || type == "Datasett") className += "label-datasett";
                else if (type == "default") className += "label-default";
                else className += "label-tjeneste";

                return className;
            },
            getCartButtonStatus: function () {
                var addedOrderitems = localStorage.getItem('orderItems');
                if (addedOrderitems !== null &&
                    addedOrderitems !== "[]" &&
                    addedOrderitems !== "[null]" &&
                    addedOrderitems !== "") {
                    addedOrderitems = JSON.parse(addedOrderitems);
                    var addedToCart = false;
                    addedOrderitems.forEach(function (addedOrderItemUuid) {
                        if (addedOrderItemUuid !== null) {
                            if (this.$parent.metadata !== undefined) {
                                // Temainndelte datasett
                                if (this.$parent.metadata.Uuid == addedOrderItemUuid) {
                                    addedToCart = true;
                                }
                            } else if (this.resultItem !== undefined) {
                                // Løse datasett
                                if (this.resultItem.Uuid == addedOrderItemUuid) {
                                    addedToCart = true;
                                }
                            }
                        }
                    }.bind(this));
                    this.addedToCart = addedToCart;
                }
            },
            translateDistributionType: function (Type, index) {

                $.ajax({
                    type: "GET",
                    url: "/api/distributions/" + uuid,
                    success: function (response) {
                        response.containeditems.forEach(function (item) {
                            if (item.codevalue == Type) {
                                ResultItemComponent.underlayingDistributions[index].Type = item.label;
                            }
                        }.bind(this));
                    }
                });
            }
        }
    }
</script>
