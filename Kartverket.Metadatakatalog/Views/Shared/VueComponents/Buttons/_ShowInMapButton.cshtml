<script type="text/x-template" id="showInMapButtonTemplate">
    <div v-html="htmlElement"></div>
</script>

<script>
    function getShowInMapButton(resultItem) {
        var ShowInMapButton = {
            name: "showInMapButton",
            template: "#showInMapButtonTemplate",
            props: ["resultItem", "defaultButtonClass"],
            data: function () {
                return {
                    button: {
                        id: "mapmacrolink-" + this.resultItem.Uuid,
                        content: "Vis i kart",
                        className: defaultButtonClass,
                        url: this.resultItem.MapUrl,
                        title: "Vis " + this.resultItem.Title + " i kart",
                        icon: {
                            id: "mapmacro-button-" + this.resultItem.Uuid,
                            className: "custom-icon"
                        },
                        attributes: [
                            { key: "onClick", value: "ga('send', 'event', 'Nedlasting', 'viskart')" }
                        ]
                    },
                    htmlElement: null
                }
            },
            created: function () {
                if (this.resultItem.ShowMapLink) {
                    if (this.resultItem.IsRestricted) {
                        this.button.icon.className += " custom-icon-kartmarkoer-needs-permission";
                    } else {
                        this.button.icon.className += " custom-icon-kartmarkoer";
                    }

                } else if (this.resultItem.ShowServiceMapLink) {
                    if (this.resultItem.IsRestricted) {
                        this.button.icon.className += " custom-icon-kartmarkoer-needs-permission";
                    } else {
                        this.button.icon.className += " custom-icon-kartmarkoer";
                    }
                } else {
                    this.button.className += " disabled";
                    this.button.icon.className += " custom-icon-kartmarkoer";
                    this.button.id = "";
                    this.button.icon.id = "";
                    this.button.attributes = [];
                }

                this.htmlElement = this.$parent.createButtonElement(this.button);
                this.getServiceStatus();
            },
            methods: {
                isRestrictedService: function () {
                    if (this.resultItem.ServiceDistributionAccessConstraint == "Beskyttet" ||
                        this.resultItem.ServiceDistributionAccessConstraint == "restricted" ||
                        this.resultItem.ServiceDistributionAccessConstraint == "norway digital restricted") return true;
                    else {
                        return false;
                    }
                },
                restrictedServiceClass: function () {
                    var iconPermissionClass;
                    if (this.isRestrictedService()) {
                        iconPermissionClass = " custom-icon-kartmarkoer-needs-permission";
                    } else {
                        iconPermissionClass = " custom-icon-kartmarkoer";
                    }
                    return iconPermissionClass;
                },
                getServiceStatus: function () {
                    $.getJSON(statusApi + "monitorApi/serviceDetail?uuid=" + this.resultItem.ServiceUuid, function (result) {
                        try {
                            var vurderingIsDefined = result.connect !== undefined && result.connect.vurdering !== undefined;
                            var numLayersIsDefined = result.numLayers !== undefined && result.numLayers.svar !== undefined;
                            var statusOK = vurderingIsDefined && result.connect.vurdering != "no";
                            var numLayers = parseInt(numLayersIsDefined ? result.numLayers.svar : 0);
                            if (!statusOK) {
                                this.button.className += " disabled";
                                this.button.icon.className = "custom-icon custom-icon-kartmarkoer-unavailable";
                                this.button.url = null;
                                this.button.title = "Tjenesten er utilgjengelig for øyeblikket";
                                this.button.attributes = [{ key: "disabled", value: "disabled" }];
                            }
                            else if (numLayers > 30) {
                                this.button.icon.className = "custom-icon custom-icon-kartmarkoer-warning";
                                this.button.title = "Tjenesten kan være treg å vise";
                            }
                            this.htmlElement = this.$parent.createButtonElement(this.button);
                        }
                        catch (err) {
                            console.log(err);
                        }
                    }.bind(this));
                }
            }
        };
        return ShowInMapButton;
    }
</script>
