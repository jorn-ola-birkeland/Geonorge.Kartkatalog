<script type="text/x-template" theme="tabell" id="titleContentTemplate">

    @*Liste*@
    <a v-if="$root.viewType == 'listView'" v-bind:href="href" class="show-loading-animation" data-toggle="tooltip" data-placement="bottom" v-bind:title="'se metadata for ' + metadata.Title">
        <p style="font-size:14pt" class="role-button search-results-name" role="button">{{ metadata.Title }}</p>
    </a>

    @*Galleri*@
    <div v-else-if="$root.viewType == 'galleryView'" class="resultItemRowGallery">
        <div class="search-results-gallery-image layoutblock">
            <div class="block shortcutpageteaserblock size-4 col-sm-4">
                <div class="teaser-with-background-image">
                    <a v-bind:href="href" data-toggle="tooltip" data-placement="bottom" v-bind:title="'se metadata for ' + metadata.Title">
                        <div class="teaser-background-image" v-bind:style="{ backgroundImage: 'url(' + thumbnail + ')'}">
                            <div class="teaser-overlay">
                                <div class="teaser-caption">
                                    <div class="teaser-heading">{{ metadata.Title }}</div>
                                </div>
                            </div>
                        </div>
                    </a>
                </div>
            </div>
        </div>
    </div>

    @*Tabell*@
    <div v-else class="resultItemRowTitle">
        <a v-bind:href="href"
           class="show-loading-animation"
           data-toggle="tooltip"
           data-placement="bottom"
           v-bind:title="'se metadata for ' + metadata.Title"
           v-bind:style="'padding-left: ' + this.leftPadding + ';'">
            <span class="role-button search-results-name" role="button">{{ metadata.Title }}</span>
        </a>
    </div>

</script>

<script>
    var TableTitle = {
        name: "table-title",
        template: "#titleContentTemplate",
        props: ["metadata", "parentHierarchyLevel"],
        computed: {
            hierarchyLevel: function () {
                return this.parentHierarchyLevel !== undefined ? this.parentHierarchyLevel : 0;
            },
            leftPadding: function () {
                var leftPadding = 0;
                if (this.hierarchyLevel > 0) {
                    leftPadding = 18 + (18 * this.hierarchyLevel);
                    leftPadding = leftPadding += 'px';
                }
                return leftPadding;
            },
            href: function () {
                return "/metadata/" +
                    this.metadata.OrganizationSeoName +
                    "/" +
                    this.metadata.TitleSeo +
                    "/" +
                    this.metadata.Uuid;
            },
            thumbnail: function () {
                return "/thumbnail?uuid=" + this.metadata.Uuid + "&type=small";
            }
        }
    };
</script>
